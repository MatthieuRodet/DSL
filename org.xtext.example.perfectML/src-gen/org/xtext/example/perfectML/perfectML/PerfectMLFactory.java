/**
 * generated by Xtext 2.25.0
 */
package org.xtext.example.perfectML.perfectML;

import org.eclipse.emf.ecore.EFactory;

/**
 * <!-- begin-user-doc -->
 * The <b>Factory</b> for the model.
 * It provides a create method for each non-abstract class of the model.
 * <!-- end-user-doc -->
 * @see org.xtext.example.perfectML.perfectML.PerfectMLPackage
 * @generated
 */
public interface PerfectMLFactory extends EFactory
{
  /**
   * The singleton instance of the factory.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  PerfectMLFactory eINSTANCE = org.xtext.example.perfectML.perfectML.impl.PerfectMLFactoryImpl.init();

  /**
   * Returns a new object of class '<em>File</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>File</em>'.
   * @generated
   */
  PerfectMLFile createPerfectMLFile();

  /**
   * Returns a new object of class '<em>Program</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Program</em>'.
   * @generated
   */
  Program createProgram();

  /**
   * Returns a new object of class '<em>Input</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Input</em>'.
   * @generated
   */
  Input createInput();

  /**
   * Returns a new object of class '<em>Output</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Output</em>'.
   * @generated
   */
  Output createOutput();

  /**
   * Returns a new object of class '<em>Algorithm</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Algorithm</em>'.
   * @generated
   */
  Algorithm createAlgorithm();

  /**
   * Returns a new object of class '<em>MLP Classifier</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>MLP Classifier</em>'.
   * @generated
   */
  MLPClassifier createMLPClassifier();

  /**
   * Returns a new object of class '<em>SVC</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>SVC</em>'.
   * @generated
   */
  SVC createSVC();

  /**
   * Returns a new object of class '<em>KNeighbors Classifier</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>KNeighbors Classifier</em>'.
   * @generated
   */
  KNeighborsClassifier createKNeighborsClassifier();

  /**
   * Returns a new object of class '<em>Training Amount</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Training Amount</em>'.
   * @generated
   */
  TrainingAmount createTrainingAmount();

  /**
   * Returns a new object of class '<em>Column Declarations</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Column Declarations</em>'.
   * @generated
   */
  ColumnDeclarations createColumnDeclarations();

  /**
   * Returns a new object of class '<em>Column Set</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Column Set</em>'.
   * @generated
   */
  ColumnSet createColumnSet();

  /**
   * Returns a new object of class '<em>Binop</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Binop</em>'.
   * @generated
   */
  Binop createBinop();

  /**
   * Returns a new object of class '<em>FLOAT</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>FLOAT</em>'.
   * @generated
   */
  FLOAT createFLOAT();

  /**
   * Returns a new object of class '<em>BOOL</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>BOOL</em>'.
   * @generated
   */
  BOOL createBOOL();

  /**
   * Returns the package supported by this factory.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the package supported by this factory.
   * @generated
   */
  PerfectMLPackage getPerfectMLPackage();

} //PerfectMLFactory
