/**
 * generated by Xtext 2.25.0
 */
package org.xtext.example.perfectML.perfectML;

import org.eclipse.emf.common.util.EList;

/**
 * <!-- begin-user-doc -->
 * A representation of the model object '<em><b>MLP Classifier</b></em>'.
 * <!-- end-user-doc -->
 *
 * <p>
 * The following features are supported:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.example.perfectML.perfectML.MLPClassifier#isHidden_layer_sizes_def <em>Hidden layer sizes def</em>}</li>
 *   <li>{@link org.xtext.example.perfectML.perfectML.MLPClassifier#getHidden_layer_sizes <em>Hidden layer sizes</em>}</li>
 *   <li>{@link org.xtext.example.perfectML.perfectML.MLPClassifier#isActivation_def <em>Activation def</em>}</li>
 *   <li>{@link org.xtext.example.perfectML.perfectML.MLPClassifier#getActivation <em>Activation</em>}</li>
 *   <li>{@link org.xtext.example.perfectML.perfectML.MLPClassifier#isSolver_def <em>Solver def</em>}</li>
 *   <li>{@link org.xtext.example.perfectML.perfectML.MLPClassifier#getSolver <em>Solver</em>}</li>
 *   <li>{@link org.xtext.example.perfectML.perfectML.MLPClassifier#isAlpha_def <em>Alpha def</em>}</li>
 *   <li>{@link org.xtext.example.perfectML.perfectML.MLPClassifier#getAlpha <em>Alpha</em>}</li>
 *   <li>{@link org.xtext.example.perfectML.perfectML.MLPClassifier#isBatch_size_def <em>Batch size def</em>}</li>
 *   <li>{@link org.xtext.example.perfectML.perfectML.MLPClassifier#getBatch_size <em>Batch size</em>}</li>
 *   <li>{@link org.xtext.example.perfectML.perfectML.MLPClassifier#isLearning_rate_def <em>Learning rate def</em>}</li>
 *   <li>{@link org.xtext.example.perfectML.perfectML.MLPClassifier#getLearning_rate <em>Learning rate</em>}</li>
 *   <li>{@link org.xtext.example.perfectML.perfectML.MLPClassifier#isLearning_rate_init_def <em>Learning rate init def</em>}</li>
 *   <li>{@link org.xtext.example.perfectML.perfectML.MLPClassifier#getLearning_rate_init <em>Learning rate init</em>}</li>
 *   <li>{@link org.xtext.example.perfectML.perfectML.MLPClassifier#isPower_t_def <em>Power tdef</em>}</li>
 *   <li>{@link org.xtext.example.perfectML.perfectML.MLPClassifier#getPower_t <em>Power t</em>}</li>
 *   <li>{@link org.xtext.example.perfectML.perfectML.MLPClassifier#isMax_iteer_def <em>Max iteer def</em>}</li>
 *   <li>{@link org.xtext.example.perfectML.perfectML.MLPClassifier#getMax_iter <em>Max iter</em>}</li>
 *   <li>{@link org.xtext.example.perfectML.perfectML.MLPClassifier#isShuffle_def <em>Shuffle def</em>}</li>
 *   <li>{@link org.xtext.example.perfectML.perfectML.MLPClassifier#getShuffle <em>Shuffle</em>}</li>
 *   <li>{@link org.xtext.example.perfectML.perfectML.MLPClassifier#isRandom_state_def <em>Random state def</em>}</li>
 *   <li>{@link org.xtext.example.perfectML.perfectML.MLPClassifier#getRandom_state <em>Random state</em>}</li>
 *   <li>{@link org.xtext.example.perfectML.perfectML.MLPClassifier#isTolerance_def <em>Tolerance def</em>}</li>
 *   <li>{@link org.xtext.example.perfectML.perfectML.MLPClassifier#getTolerance <em>Tolerance</em>}</li>
 *   <li>{@link org.xtext.example.perfectML.perfectML.MLPClassifier#isVerbose_def <em>Verbose def</em>}</li>
 *   <li>{@link org.xtext.example.perfectML.perfectML.MLPClassifier#getVerbose <em>Verbose</em>}</li>
 *   <li>{@link org.xtext.example.perfectML.perfectML.MLPClassifier#isWarm_start_def <em>Warm start def</em>}</li>
 *   <li>{@link org.xtext.example.perfectML.perfectML.MLPClassifier#getWarm_start <em>Warm start</em>}</li>
 *   <li>{@link org.xtext.example.perfectML.perfectML.MLPClassifier#isMomentum_def <em>Momentum def</em>}</li>
 *   <li>{@link org.xtext.example.perfectML.perfectML.MLPClassifier#getMomentum <em>Momentum</em>}</li>
 *   <li>{@link org.xtext.example.perfectML.perfectML.MLPClassifier#isNesterovs_momentum_def <em>Nesterovs momentum def</em>}</li>
 *   <li>{@link org.xtext.example.perfectML.perfectML.MLPClassifier#getNesterovs_momentum <em>Nesterovs momentum</em>}</li>
 *   <li>{@link org.xtext.example.perfectML.perfectML.MLPClassifier#isEarly_stopping_def <em>Early stopping def</em>}</li>
 *   <li>{@link org.xtext.example.perfectML.perfectML.MLPClassifier#getEarly_stopping <em>Early stopping</em>}</li>
 *   <li>{@link org.xtext.example.perfectML.perfectML.MLPClassifier#isValidation_fraction_def <em>Validation fraction def</em>}</li>
 *   <li>{@link org.xtext.example.perfectML.perfectML.MLPClassifier#getValidation_fraction <em>Validation fraction</em>}</li>
 *   <li>{@link org.xtext.example.perfectML.perfectML.MLPClassifier#isBeta_1_def <em>Beta 1def</em>}</li>
 *   <li>{@link org.xtext.example.perfectML.perfectML.MLPClassifier#getBeta_1 <em>Beta 1</em>}</li>
 *   <li>{@link org.xtext.example.perfectML.perfectML.MLPClassifier#isBeta_2_def <em>Beta 2def</em>}</li>
 *   <li>{@link org.xtext.example.perfectML.perfectML.MLPClassifier#getBeta_2 <em>Beta 2</em>}</li>
 *   <li>{@link org.xtext.example.perfectML.perfectML.MLPClassifier#isEpsilon_def <em>Epsilon def</em>}</li>
 *   <li>{@link org.xtext.example.perfectML.perfectML.MLPClassifier#getEpsilon <em>Epsilon</em>}</li>
 *   <li>{@link org.xtext.example.perfectML.perfectML.MLPClassifier#isN_iter_no_change_def <em>Niter no change def</em>}</li>
 *   <li>{@link org.xtext.example.perfectML.perfectML.MLPClassifier#getN_iter_no_change <em>Niter no change</em>}</li>
 *   <li>{@link org.xtext.example.perfectML.perfectML.MLPClassifier#isMax_fun_def <em>Max fun def</em>}</li>
 *   <li>{@link org.xtext.example.perfectML.perfectML.MLPClassifier#getMax_fun <em>Max fun</em>}</li>
 * </ul>
 *
 * @see org.xtext.example.perfectML.perfectML.PerfectMLPackage#getMLPClassifier()
 * @model
 * @generated
 */
public interface MLPClassifier extends Algorithm
{
  /**
   * Returns the value of the '<em><b>Hidden layer sizes def</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Hidden layer sizes def</em>' attribute.
   * @see #setHidden_layer_sizes_def(boolean)
   * @see org.xtext.example.perfectML.perfectML.PerfectMLPackage#getMLPClassifier_Hidden_layer_sizes_def()
   * @model
   * @generated
   */
  boolean isHidden_layer_sizes_def();

  /**
   * Sets the value of the '{@link org.xtext.example.perfectML.perfectML.MLPClassifier#isHidden_layer_sizes_def <em>Hidden layer sizes def</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Hidden layer sizes def</em>' attribute.
   * @see #isHidden_layer_sizes_def()
   * @generated
   */
  void setHidden_layer_sizes_def(boolean value);

  /**
   * Returns the value of the '<em><b>Hidden layer sizes</b></em>' attribute list.
   * The list contents are of type {@link java.lang.Integer}.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Hidden layer sizes</em>' attribute list.
   * @see org.xtext.example.perfectML.perfectML.PerfectMLPackage#getMLPClassifier_Hidden_layer_sizes()
   * @model unique="false"
   * @generated
   */
  EList<Integer> getHidden_layer_sizes();

  /**
   * Returns the value of the '<em><b>Activation def</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Activation def</em>' attribute.
   * @see #setActivation_def(boolean)
   * @see org.xtext.example.perfectML.perfectML.PerfectMLPackage#getMLPClassifier_Activation_def()
   * @model
   * @generated
   */
  boolean isActivation_def();

  /**
   * Sets the value of the '{@link org.xtext.example.perfectML.perfectML.MLPClassifier#isActivation_def <em>Activation def</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Activation def</em>' attribute.
   * @see #isActivation_def()
   * @generated
   */
  void setActivation_def(boolean value);

  /**
   * Returns the value of the '<em><b>Activation</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Activation</em>' attribute.
   * @see #setActivation(String)
   * @see org.xtext.example.perfectML.perfectML.PerfectMLPackage#getMLPClassifier_Activation()
   * @model
   * @generated
   */
  String getActivation();

  /**
   * Sets the value of the '{@link org.xtext.example.perfectML.perfectML.MLPClassifier#getActivation <em>Activation</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Activation</em>' attribute.
   * @see #getActivation()
   * @generated
   */
  void setActivation(String value);

  /**
   * Returns the value of the '<em><b>Solver def</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Solver def</em>' attribute.
   * @see #setSolver_def(boolean)
   * @see org.xtext.example.perfectML.perfectML.PerfectMLPackage#getMLPClassifier_Solver_def()
   * @model
   * @generated
   */
  boolean isSolver_def();

  /**
   * Sets the value of the '{@link org.xtext.example.perfectML.perfectML.MLPClassifier#isSolver_def <em>Solver def</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Solver def</em>' attribute.
   * @see #isSolver_def()
   * @generated
   */
  void setSolver_def(boolean value);

  /**
   * Returns the value of the '<em><b>Solver</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Solver</em>' attribute.
   * @see #setSolver(String)
   * @see org.xtext.example.perfectML.perfectML.PerfectMLPackage#getMLPClassifier_Solver()
   * @model
   * @generated
   */
  String getSolver();

  /**
   * Sets the value of the '{@link org.xtext.example.perfectML.perfectML.MLPClassifier#getSolver <em>Solver</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Solver</em>' attribute.
   * @see #getSolver()
   * @generated
   */
  void setSolver(String value);

  /**
   * Returns the value of the '<em><b>Alpha def</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Alpha def</em>' attribute.
   * @see #setAlpha_def(boolean)
   * @see org.xtext.example.perfectML.perfectML.PerfectMLPackage#getMLPClassifier_Alpha_def()
   * @model
   * @generated
   */
  boolean isAlpha_def();

  /**
   * Sets the value of the '{@link org.xtext.example.perfectML.perfectML.MLPClassifier#isAlpha_def <em>Alpha def</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Alpha def</em>' attribute.
   * @see #isAlpha_def()
   * @generated
   */
  void setAlpha_def(boolean value);

  /**
   * Returns the value of the '<em><b>Alpha</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Alpha</em>' containment reference.
   * @see #setAlpha(FLOAT)
   * @see org.xtext.example.perfectML.perfectML.PerfectMLPackage#getMLPClassifier_Alpha()
   * @model containment="true"
   * @generated
   */
  FLOAT getAlpha();

  /**
   * Sets the value of the '{@link org.xtext.example.perfectML.perfectML.MLPClassifier#getAlpha <em>Alpha</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Alpha</em>' containment reference.
   * @see #getAlpha()
   * @generated
   */
  void setAlpha(FLOAT value);

  /**
   * Returns the value of the '<em><b>Batch size def</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Batch size def</em>' attribute.
   * @see #setBatch_size_def(boolean)
   * @see org.xtext.example.perfectML.perfectML.PerfectMLPackage#getMLPClassifier_Batch_size_def()
   * @model
   * @generated
   */
  boolean isBatch_size_def();

  /**
   * Sets the value of the '{@link org.xtext.example.perfectML.perfectML.MLPClassifier#isBatch_size_def <em>Batch size def</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Batch size def</em>' attribute.
   * @see #isBatch_size_def()
   * @generated
   */
  void setBatch_size_def(boolean value);

  /**
   * Returns the value of the '<em><b>Batch size</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Batch size</em>' attribute.
   * @see #setBatch_size(int)
   * @see org.xtext.example.perfectML.perfectML.PerfectMLPackage#getMLPClassifier_Batch_size()
   * @model
   * @generated
   */
  int getBatch_size();

  /**
   * Sets the value of the '{@link org.xtext.example.perfectML.perfectML.MLPClassifier#getBatch_size <em>Batch size</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Batch size</em>' attribute.
   * @see #getBatch_size()
   * @generated
   */
  void setBatch_size(int value);

  /**
   * Returns the value of the '<em><b>Learning rate def</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Learning rate def</em>' attribute.
   * @see #setLearning_rate_def(boolean)
   * @see org.xtext.example.perfectML.perfectML.PerfectMLPackage#getMLPClassifier_Learning_rate_def()
   * @model
   * @generated
   */
  boolean isLearning_rate_def();

  /**
   * Sets the value of the '{@link org.xtext.example.perfectML.perfectML.MLPClassifier#isLearning_rate_def <em>Learning rate def</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Learning rate def</em>' attribute.
   * @see #isLearning_rate_def()
   * @generated
   */
  void setLearning_rate_def(boolean value);

  /**
   * Returns the value of the '<em><b>Learning rate</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Learning rate</em>' attribute.
   * @see #setLearning_rate(String)
   * @see org.xtext.example.perfectML.perfectML.PerfectMLPackage#getMLPClassifier_Learning_rate()
   * @model
   * @generated
   */
  String getLearning_rate();

  /**
   * Sets the value of the '{@link org.xtext.example.perfectML.perfectML.MLPClassifier#getLearning_rate <em>Learning rate</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Learning rate</em>' attribute.
   * @see #getLearning_rate()
   * @generated
   */
  void setLearning_rate(String value);

  /**
   * Returns the value of the '<em><b>Learning rate init def</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Learning rate init def</em>' attribute.
   * @see #setLearning_rate_init_def(boolean)
   * @see org.xtext.example.perfectML.perfectML.PerfectMLPackage#getMLPClassifier_Learning_rate_init_def()
   * @model
   * @generated
   */
  boolean isLearning_rate_init_def();

  /**
   * Sets the value of the '{@link org.xtext.example.perfectML.perfectML.MLPClassifier#isLearning_rate_init_def <em>Learning rate init def</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Learning rate init def</em>' attribute.
   * @see #isLearning_rate_init_def()
   * @generated
   */
  void setLearning_rate_init_def(boolean value);

  /**
   * Returns the value of the '<em><b>Learning rate init</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Learning rate init</em>' containment reference.
   * @see #setLearning_rate_init(FLOAT)
   * @see org.xtext.example.perfectML.perfectML.PerfectMLPackage#getMLPClassifier_Learning_rate_init()
   * @model containment="true"
   * @generated
   */
  FLOAT getLearning_rate_init();

  /**
   * Sets the value of the '{@link org.xtext.example.perfectML.perfectML.MLPClassifier#getLearning_rate_init <em>Learning rate init</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Learning rate init</em>' containment reference.
   * @see #getLearning_rate_init()
   * @generated
   */
  void setLearning_rate_init(FLOAT value);

  /**
   * Returns the value of the '<em><b>Power tdef</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Power tdef</em>' attribute.
   * @see #setPower_t_def(boolean)
   * @see org.xtext.example.perfectML.perfectML.PerfectMLPackage#getMLPClassifier_Power_t_def()
   * @model
   * @generated
   */
  boolean isPower_t_def();

  /**
   * Sets the value of the '{@link org.xtext.example.perfectML.perfectML.MLPClassifier#isPower_t_def <em>Power tdef</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Power tdef</em>' attribute.
   * @see #isPower_t_def()
   * @generated
   */
  void setPower_t_def(boolean value);

  /**
   * Returns the value of the '<em><b>Power t</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Power t</em>' containment reference.
   * @see #setPower_t(FLOAT)
   * @see org.xtext.example.perfectML.perfectML.PerfectMLPackage#getMLPClassifier_Power_t()
   * @model containment="true"
   * @generated
   */
  FLOAT getPower_t();

  /**
   * Sets the value of the '{@link org.xtext.example.perfectML.perfectML.MLPClassifier#getPower_t <em>Power t</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Power t</em>' containment reference.
   * @see #getPower_t()
   * @generated
   */
  void setPower_t(FLOAT value);

  /**
   * Returns the value of the '<em><b>Max iteer def</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Max iteer def</em>' attribute.
   * @see #setMax_iteer_def(boolean)
   * @see org.xtext.example.perfectML.perfectML.PerfectMLPackage#getMLPClassifier_Max_iteer_def()
   * @model
   * @generated
   */
  boolean isMax_iteer_def();

  /**
   * Sets the value of the '{@link org.xtext.example.perfectML.perfectML.MLPClassifier#isMax_iteer_def <em>Max iteer def</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Max iteer def</em>' attribute.
   * @see #isMax_iteer_def()
   * @generated
   */
  void setMax_iteer_def(boolean value);

  /**
   * Returns the value of the '<em><b>Max iter</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Max iter</em>' containment reference.
   * @see #setMax_iter(FLOAT)
   * @see org.xtext.example.perfectML.perfectML.PerfectMLPackage#getMLPClassifier_Max_iter()
   * @model containment="true"
   * @generated
   */
  FLOAT getMax_iter();

  /**
   * Sets the value of the '{@link org.xtext.example.perfectML.perfectML.MLPClassifier#getMax_iter <em>Max iter</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Max iter</em>' containment reference.
   * @see #getMax_iter()
   * @generated
   */
  void setMax_iter(FLOAT value);

  /**
   * Returns the value of the '<em><b>Shuffle def</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Shuffle def</em>' attribute.
   * @see #setShuffle_def(boolean)
   * @see org.xtext.example.perfectML.perfectML.PerfectMLPackage#getMLPClassifier_Shuffle_def()
   * @model
   * @generated
   */
  boolean isShuffle_def();

  /**
   * Sets the value of the '{@link org.xtext.example.perfectML.perfectML.MLPClassifier#isShuffle_def <em>Shuffle def</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Shuffle def</em>' attribute.
   * @see #isShuffle_def()
   * @generated
   */
  void setShuffle_def(boolean value);

  /**
   * Returns the value of the '<em><b>Shuffle</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Shuffle</em>' containment reference.
   * @see #setShuffle(BOOL)
   * @see org.xtext.example.perfectML.perfectML.PerfectMLPackage#getMLPClassifier_Shuffle()
   * @model containment="true"
   * @generated
   */
  BOOL getShuffle();

  /**
   * Sets the value of the '{@link org.xtext.example.perfectML.perfectML.MLPClassifier#getShuffle <em>Shuffle</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Shuffle</em>' containment reference.
   * @see #getShuffle()
   * @generated
   */
  void setShuffle(BOOL value);

  /**
   * Returns the value of the '<em><b>Random state def</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Random state def</em>' attribute.
   * @see #setRandom_state_def(boolean)
   * @see org.xtext.example.perfectML.perfectML.PerfectMLPackage#getMLPClassifier_Random_state_def()
   * @model
   * @generated
   */
  boolean isRandom_state_def();

  /**
   * Sets the value of the '{@link org.xtext.example.perfectML.perfectML.MLPClassifier#isRandom_state_def <em>Random state def</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Random state def</em>' attribute.
   * @see #isRandom_state_def()
   * @generated
   */
  void setRandom_state_def(boolean value);

  /**
   * Returns the value of the '<em><b>Random state</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Random state</em>' attribute.
   * @see #setRandom_state(int)
   * @see org.xtext.example.perfectML.perfectML.PerfectMLPackage#getMLPClassifier_Random_state()
   * @model
   * @generated
   */
  int getRandom_state();

  /**
   * Sets the value of the '{@link org.xtext.example.perfectML.perfectML.MLPClassifier#getRandom_state <em>Random state</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Random state</em>' attribute.
   * @see #getRandom_state()
   * @generated
   */
  void setRandom_state(int value);

  /**
   * Returns the value of the '<em><b>Tolerance def</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Tolerance def</em>' attribute.
   * @see #setTolerance_def(boolean)
   * @see org.xtext.example.perfectML.perfectML.PerfectMLPackage#getMLPClassifier_Tolerance_def()
   * @model
   * @generated
   */
  boolean isTolerance_def();

  /**
   * Sets the value of the '{@link org.xtext.example.perfectML.perfectML.MLPClassifier#isTolerance_def <em>Tolerance def</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Tolerance def</em>' attribute.
   * @see #isTolerance_def()
   * @generated
   */
  void setTolerance_def(boolean value);

  /**
   * Returns the value of the '<em><b>Tolerance</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Tolerance</em>' containment reference.
   * @see #setTolerance(FLOAT)
   * @see org.xtext.example.perfectML.perfectML.PerfectMLPackage#getMLPClassifier_Tolerance()
   * @model containment="true"
   * @generated
   */
  FLOAT getTolerance();

  /**
   * Sets the value of the '{@link org.xtext.example.perfectML.perfectML.MLPClassifier#getTolerance <em>Tolerance</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Tolerance</em>' containment reference.
   * @see #getTolerance()
   * @generated
   */
  void setTolerance(FLOAT value);

  /**
   * Returns the value of the '<em><b>Verbose def</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Verbose def</em>' attribute.
   * @see #setVerbose_def(boolean)
   * @see org.xtext.example.perfectML.perfectML.PerfectMLPackage#getMLPClassifier_Verbose_def()
   * @model
   * @generated
   */
  boolean isVerbose_def();

  /**
   * Sets the value of the '{@link org.xtext.example.perfectML.perfectML.MLPClassifier#isVerbose_def <em>Verbose def</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Verbose def</em>' attribute.
   * @see #isVerbose_def()
   * @generated
   */
  void setVerbose_def(boolean value);

  /**
   * Returns the value of the '<em><b>Verbose</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Verbose</em>' containment reference.
   * @see #setVerbose(BOOL)
   * @see org.xtext.example.perfectML.perfectML.PerfectMLPackage#getMLPClassifier_Verbose()
   * @model containment="true"
   * @generated
   */
  BOOL getVerbose();

  /**
   * Sets the value of the '{@link org.xtext.example.perfectML.perfectML.MLPClassifier#getVerbose <em>Verbose</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Verbose</em>' containment reference.
   * @see #getVerbose()
   * @generated
   */
  void setVerbose(BOOL value);

  /**
   * Returns the value of the '<em><b>Warm start def</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Warm start def</em>' attribute.
   * @see #setWarm_start_def(boolean)
   * @see org.xtext.example.perfectML.perfectML.PerfectMLPackage#getMLPClassifier_Warm_start_def()
   * @model
   * @generated
   */
  boolean isWarm_start_def();

  /**
   * Sets the value of the '{@link org.xtext.example.perfectML.perfectML.MLPClassifier#isWarm_start_def <em>Warm start def</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Warm start def</em>' attribute.
   * @see #isWarm_start_def()
   * @generated
   */
  void setWarm_start_def(boolean value);

  /**
   * Returns the value of the '<em><b>Warm start</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Warm start</em>' containment reference.
   * @see #setWarm_start(BOOL)
   * @see org.xtext.example.perfectML.perfectML.PerfectMLPackage#getMLPClassifier_Warm_start()
   * @model containment="true"
   * @generated
   */
  BOOL getWarm_start();

  /**
   * Sets the value of the '{@link org.xtext.example.perfectML.perfectML.MLPClassifier#getWarm_start <em>Warm start</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Warm start</em>' containment reference.
   * @see #getWarm_start()
   * @generated
   */
  void setWarm_start(BOOL value);

  /**
   * Returns the value of the '<em><b>Momentum def</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Momentum def</em>' attribute.
   * @see #setMomentum_def(boolean)
   * @see org.xtext.example.perfectML.perfectML.PerfectMLPackage#getMLPClassifier_Momentum_def()
   * @model
   * @generated
   */
  boolean isMomentum_def();

  /**
   * Sets the value of the '{@link org.xtext.example.perfectML.perfectML.MLPClassifier#isMomentum_def <em>Momentum def</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Momentum def</em>' attribute.
   * @see #isMomentum_def()
   * @generated
   */
  void setMomentum_def(boolean value);

  /**
   * Returns the value of the '<em><b>Momentum</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Momentum</em>' containment reference.
   * @see #setMomentum(FLOAT)
   * @see org.xtext.example.perfectML.perfectML.PerfectMLPackage#getMLPClassifier_Momentum()
   * @model containment="true"
   * @generated
   */
  FLOAT getMomentum();

  /**
   * Sets the value of the '{@link org.xtext.example.perfectML.perfectML.MLPClassifier#getMomentum <em>Momentum</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Momentum</em>' containment reference.
   * @see #getMomentum()
   * @generated
   */
  void setMomentum(FLOAT value);

  /**
   * Returns the value of the '<em><b>Nesterovs momentum def</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Nesterovs momentum def</em>' attribute.
   * @see #setNesterovs_momentum_def(boolean)
   * @see org.xtext.example.perfectML.perfectML.PerfectMLPackage#getMLPClassifier_Nesterovs_momentum_def()
   * @model
   * @generated
   */
  boolean isNesterovs_momentum_def();

  /**
   * Sets the value of the '{@link org.xtext.example.perfectML.perfectML.MLPClassifier#isNesterovs_momentum_def <em>Nesterovs momentum def</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Nesterovs momentum def</em>' attribute.
   * @see #isNesterovs_momentum_def()
   * @generated
   */
  void setNesterovs_momentum_def(boolean value);

  /**
   * Returns the value of the '<em><b>Nesterovs momentum</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Nesterovs momentum</em>' containment reference.
   * @see #setNesterovs_momentum(BOOL)
   * @see org.xtext.example.perfectML.perfectML.PerfectMLPackage#getMLPClassifier_Nesterovs_momentum()
   * @model containment="true"
   * @generated
   */
  BOOL getNesterovs_momentum();

  /**
   * Sets the value of the '{@link org.xtext.example.perfectML.perfectML.MLPClassifier#getNesterovs_momentum <em>Nesterovs momentum</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Nesterovs momentum</em>' containment reference.
   * @see #getNesterovs_momentum()
   * @generated
   */
  void setNesterovs_momentum(BOOL value);

  /**
   * Returns the value of the '<em><b>Early stopping def</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Early stopping def</em>' attribute.
   * @see #setEarly_stopping_def(boolean)
   * @see org.xtext.example.perfectML.perfectML.PerfectMLPackage#getMLPClassifier_Early_stopping_def()
   * @model
   * @generated
   */
  boolean isEarly_stopping_def();

  /**
   * Sets the value of the '{@link org.xtext.example.perfectML.perfectML.MLPClassifier#isEarly_stopping_def <em>Early stopping def</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Early stopping def</em>' attribute.
   * @see #isEarly_stopping_def()
   * @generated
   */
  void setEarly_stopping_def(boolean value);

  /**
   * Returns the value of the '<em><b>Early stopping</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Early stopping</em>' containment reference.
   * @see #setEarly_stopping(BOOL)
   * @see org.xtext.example.perfectML.perfectML.PerfectMLPackage#getMLPClassifier_Early_stopping()
   * @model containment="true"
   * @generated
   */
  BOOL getEarly_stopping();

  /**
   * Sets the value of the '{@link org.xtext.example.perfectML.perfectML.MLPClassifier#getEarly_stopping <em>Early stopping</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Early stopping</em>' containment reference.
   * @see #getEarly_stopping()
   * @generated
   */
  void setEarly_stopping(BOOL value);

  /**
   * Returns the value of the '<em><b>Validation fraction def</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Validation fraction def</em>' attribute.
   * @see #setValidation_fraction_def(boolean)
   * @see org.xtext.example.perfectML.perfectML.PerfectMLPackage#getMLPClassifier_Validation_fraction_def()
   * @model
   * @generated
   */
  boolean isValidation_fraction_def();

  /**
   * Sets the value of the '{@link org.xtext.example.perfectML.perfectML.MLPClassifier#isValidation_fraction_def <em>Validation fraction def</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Validation fraction def</em>' attribute.
   * @see #isValidation_fraction_def()
   * @generated
   */
  void setValidation_fraction_def(boolean value);

  /**
   * Returns the value of the '<em><b>Validation fraction</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Validation fraction</em>' containment reference.
   * @see #setValidation_fraction(FLOAT)
   * @see org.xtext.example.perfectML.perfectML.PerfectMLPackage#getMLPClassifier_Validation_fraction()
   * @model containment="true"
   * @generated
   */
  FLOAT getValidation_fraction();

  /**
   * Sets the value of the '{@link org.xtext.example.perfectML.perfectML.MLPClassifier#getValidation_fraction <em>Validation fraction</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Validation fraction</em>' containment reference.
   * @see #getValidation_fraction()
   * @generated
   */
  void setValidation_fraction(FLOAT value);

  /**
   * Returns the value of the '<em><b>Beta 1def</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Beta 1def</em>' attribute.
   * @see #setBeta_1_def(boolean)
   * @see org.xtext.example.perfectML.perfectML.PerfectMLPackage#getMLPClassifier_Beta_1_def()
   * @model
   * @generated
   */
  boolean isBeta_1_def();

  /**
   * Sets the value of the '{@link org.xtext.example.perfectML.perfectML.MLPClassifier#isBeta_1_def <em>Beta 1def</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Beta 1def</em>' attribute.
   * @see #isBeta_1_def()
   * @generated
   */
  void setBeta_1_def(boolean value);

  /**
   * Returns the value of the '<em><b>Beta 1</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Beta 1</em>' containment reference.
   * @see #setBeta_1(FLOAT)
   * @see org.xtext.example.perfectML.perfectML.PerfectMLPackage#getMLPClassifier_Beta_1()
   * @model containment="true"
   * @generated
   */
  FLOAT getBeta_1();

  /**
   * Sets the value of the '{@link org.xtext.example.perfectML.perfectML.MLPClassifier#getBeta_1 <em>Beta 1</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Beta 1</em>' containment reference.
   * @see #getBeta_1()
   * @generated
   */
  void setBeta_1(FLOAT value);

  /**
   * Returns the value of the '<em><b>Beta 2def</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Beta 2def</em>' attribute.
   * @see #setBeta_2_def(boolean)
   * @see org.xtext.example.perfectML.perfectML.PerfectMLPackage#getMLPClassifier_Beta_2_def()
   * @model
   * @generated
   */
  boolean isBeta_2_def();

  /**
   * Sets the value of the '{@link org.xtext.example.perfectML.perfectML.MLPClassifier#isBeta_2_def <em>Beta 2def</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Beta 2def</em>' attribute.
   * @see #isBeta_2_def()
   * @generated
   */
  void setBeta_2_def(boolean value);

  /**
   * Returns the value of the '<em><b>Beta 2</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Beta 2</em>' containment reference.
   * @see #setBeta_2(FLOAT)
   * @see org.xtext.example.perfectML.perfectML.PerfectMLPackage#getMLPClassifier_Beta_2()
   * @model containment="true"
   * @generated
   */
  FLOAT getBeta_2();

  /**
   * Sets the value of the '{@link org.xtext.example.perfectML.perfectML.MLPClassifier#getBeta_2 <em>Beta 2</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Beta 2</em>' containment reference.
   * @see #getBeta_2()
   * @generated
   */
  void setBeta_2(FLOAT value);

  /**
   * Returns the value of the '<em><b>Epsilon def</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Epsilon def</em>' attribute.
   * @see #setEpsilon_def(boolean)
   * @see org.xtext.example.perfectML.perfectML.PerfectMLPackage#getMLPClassifier_Epsilon_def()
   * @model
   * @generated
   */
  boolean isEpsilon_def();

  /**
   * Sets the value of the '{@link org.xtext.example.perfectML.perfectML.MLPClassifier#isEpsilon_def <em>Epsilon def</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Epsilon def</em>' attribute.
   * @see #isEpsilon_def()
   * @generated
   */
  void setEpsilon_def(boolean value);

  /**
   * Returns the value of the '<em><b>Epsilon</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Epsilon</em>' containment reference.
   * @see #setEpsilon(FLOAT)
   * @see org.xtext.example.perfectML.perfectML.PerfectMLPackage#getMLPClassifier_Epsilon()
   * @model containment="true"
   * @generated
   */
  FLOAT getEpsilon();

  /**
   * Sets the value of the '{@link org.xtext.example.perfectML.perfectML.MLPClassifier#getEpsilon <em>Epsilon</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Epsilon</em>' containment reference.
   * @see #getEpsilon()
   * @generated
   */
  void setEpsilon(FLOAT value);

  /**
   * Returns the value of the '<em><b>Niter no change def</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Niter no change def</em>' attribute.
   * @see #setN_iter_no_change_def(boolean)
   * @see org.xtext.example.perfectML.perfectML.PerfectMLPackage#getMLPClassifier_N_iter_no_change_def()
   * @model
   * @generated
   */
  boolean isN_iter_no_change_def();

  /**
   * Sets the value of the '{@link org.xtext.example.perfectML.perfectML.MLPClassifier#isN_iter_no_change_def <em>Niter no change def</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Niter no change def</em>' attribute.
   * @see #isN_iter_no_change_def()
   * @generated
   */
  void setN_iter_no_change_def(boolean value);

  /**
   * Returns the value of the '<em><b>Niter no change</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Niter no change</em>' attribute.
   * @see #setN_iter_no_change(int)
   * @see org.xtext.example.perfectML.perfectML.PerfectMLPackage#getMLPClassifier_N_iter_no_change()
   * @model
   * @generated
   */
  int getN_iter_no_change();

  /**
   * Sets the value of the '{@link org.xtext.example.perfectML.perfectML.MLPClassifier#getN_iter_no_change <em>Niter no change</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Niter no change</em>' attribute.
   * @see #getN_iter_no_change()
   * @generated
   */
  void setN_iter_no_change(int value);

  /**
   * Returns the value of the '<em><b>Max fun def</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Max fun def</em>' attribute.
   * @see #setMax_fun_def(boolean)
   * @see org.xtext.example.perfectML.perfectML.PerfectMLPackage#getMLPClassifier_Max_fun_def()
   * @model
   * @generated
   */
  boolean isMax_fun_def();

  /**
   * Sets the value of the '{@link org.xtext.example.perfectML.perfectML.MLPClassifier#isMax_fun_def <em>Max fun def</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Max fun def</em>' attribute.
   * @see #isMax_fun_def()
   * @generated
   */
  void setMax_fun_def(boolean value);

  /**
   * Returns the value of the '<em><b>Max fun</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Max fun</em>' attribute.
   * @see #setMax_fun(int)
   * @see org.xtext.example.perfectML.perfectML.PerfectMLPackage#getMLPClassifier_Max_fun()
   * @model
   * @generated
   */
  int getMax_fun();

  /**
   * Sets the value of the '{@link org.xtext.example.perfectML.perfectML.MLPClassifier#getMax_fun <em>Max fun</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Max fun</em>' attribute.
   * @see #getMax_fun()
   * @generated
   */
  void setMax_fun(int value);

} // MLPClassifier
