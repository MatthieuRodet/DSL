/**
 * generated by Xtext 2.25.0
 */
package org.xtext.example.perfectML.perfectML.impl;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.xtext.example.perfectML.perfectML.ColumnDeclarations;
import org.xtext.example.perfectML.perfectML.ColumnSet;
import org.xtext.example.perfectML.perfectML.PerfectMLPackage;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Column Declarations</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.example.perfectML.perfectML.impl.ColumnDeclarationsImpl#getTarget <em>Target</em>}</li>
 *   <li>{@link org.xtext.example.perfectML.perfectML.impl.ColumnDeclarationsImpl#isTarget_def <em>Target def</em>}</li>
 *   <li>{@link org.xtext.example.perfectML.perfectML.impl.ColumnDeclarationsImpl#getPredictive <em>Predictive</em>}</li>
 *   <li>{@link org.xtext.example.perfectML.perfectML.impl.ColumnDeclarationsImpl#isPred_def <em>Pred def</em>}</li>
 * </ul>
 *
 * @generated
 */
public class ColumnDeclarationsImpl extends MinimalEObjectImpl.Container implements ColumnDeclarations
{
  /**
   * The cached value of the '{@link #getTarget() <em>Target</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getTarget()
   * @generated
   * @ordered
   */
  protected ColumnSet target;

  /**
   * The default value of the '{@link #isTarget_def() <em>Target def</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isTarget_def()
   * @generated
   * @ordered
   */
  protected static final boolean TARGET_DEF_EDEFAULT = false;

  /**
   * The cached value of the '{@link #isTarget_def() <em>Target def</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isTarget_def()
   * @generated
   * @ordered
   */
  protected boolean target_def = TARGET_DEF_EDEFAULT;

  /**
   * The cached value of the '{@link #getPredictive() <em>Predictive</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getPredictive()
   * @generated
   * @ordered
   */
  protected ColumnSet predictive;

  /**
   * The default value of the '{@link #isPred_def() <em>Pred def</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isPred_def()
   * @generated
   * @ordered
   */
  protected static final boolean PRED_DEF_EDEFAULT = false;

  /**
   * The cached value of the '{@link #isPred_def() <em>Pred def</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isPred_def()
   * @generated
   * @ordered
   */
  protected boolean pred_def = PRED_DEF_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected ColumnDeclarationsImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return PerfectMLPackage.Literals.COLUMN_DECLARATIONS;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ColumnSet getTarget()
  {
    return target;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetTarget(ColumnSet newTarget, NotificationChain msgs)
  {
    ColumnSet oldTarget = target;
    target = newTarget;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, PerfectMLPackage.COLUMN_DECLARATIONS__TARGET, oldTarget, newTarget);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setTarget(ColumnSet newTarget)
  {
    if (newTarget != target)
    {
      NotificationChain msgs = null;
      if (target != null)
        msgs = ((InternalEObject)target).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - PerfectMLPackage.COLUMN_DECLARATIONS__TARGET, null, msgs);
      if (newTarget != null)
        msgs = ((InternalEObject)newTarget).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - PerfectMLPackage.COLUMN_DECLARATIONS__TARGET, null, msgs);
      msgs = basicSetTarget(newTarget, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, PerfectMLPackage.COLUMN_DECLARATIONS__TARGET, newTarget, newTarget));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean isTarget_def()
  {
    return target_def;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setTarget_def(boolean newTarget_def)
  {
    boolean oldTarget_def = target_def;
    target_def = newTarget_def;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, PerfectMLPackage.COLUMN_DECLARATIONS__TARGET_DEF, oldTarget_def, target_def));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ColumnSet getPredictive()
  {
    return predictive;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetPredictive(ColumnSet newPredictive, NotificationChain msgs)
  {
    ColumnSet oldPredictive = predictive;
    predictive = newPredictive;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, PerfectMLPackage.COLUMN_DECLARATIONS__PREDICTIVE, oldPredictive, newPredictive);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setPredictive(ColumnSet newPredictive)
  {
    if (newPredictive != predictive)
    {
      NotificationChain msgs = null;
      if (predictive != null)
        msgs = ((InternalEObject)predictive).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - PerfectMLPackage.COLUMN_DECLARATIONS__PREDICTIVE, null, msgs);
      if (newPredictive != null)
        msgs = ((InternalEObject)newPredictive).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - PerfectMLPackage.COLUMN_DECLARATIONS__PREDICTIVE, null, msgs);
      msgs = basicSetPredictive(newPredictive, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, PerfectMLPackage.COLUMN_DECLARATIONS__PREDICTIVE, newPredictive, newPredictive));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean isPred_def()
  {
    return pred_def;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setPred_def(boolean newPred_def)
  {
    boolean oldPred_def = pred_def;
    pred_def = newPred_def;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, PerfectMLPackage.COLUMN_DECLARATIONS__PRED_DEF, oldPred_def, pred_def));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case PerfectMLPackage.COLUMN_DECLARATIONS__TARGET:
        return basicSetTarget(null, msgs);
      case PerfectMLPackage.COLUMN_DECLARATIONS__PREDICTIVE:
        return basicSetPredictive(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case PerfectMLPackage.COLUMN_DECLARATIONS__TARGET:
        return getTarget();
      case PerfectMLPackage.COLUMN_DECLARATIONS__TARGET_DEF:
        return isTarget_def();
      case PerfectMLPackage.COLUMN_DECLARATIONS__PREDICTIVE:
        return getPredictive();
      case PerfectMLPackage.COLUMN_DECLARATIONS__PRED_DEF:
        return isPred_def();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case PerfectMLPackage.COLUMN_DECLARATIONS__TARGET:
        setTarget((ColumnSet)newValue);
        return;
      case PerfectMLPackage.COLUMN_DECLARATIONS__TARGET_DEF:
        setTarget_def((Boolean)newValue);
        return;
      case PerfectMLPackage.COLUMN_DECLARATIONS__PREDICTIVE:
        setPredictive((ColumnSet)newValue);
        return;
      case PerfectMLPackage.COLUMN_DECLARATIONS__PRED_DEF:
        setPred_def((Boolean)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case PerfectMLPackage.COLUMN_DECLARATIONS__TARGET:
        setTarget((ColumnSet)null);
        return;
      case PerfectMLPackage.COLUMN_DECLARATIONS__TARGET_DEF:
        setTarget_def(TARGET_DEF_EDEFAULT);
        return;
      case PerfectMLPackage.COLUMN_DECLARATIONS__PREDICTIVE:
        setPredictive((ColumnSet)null);
        return;
      case PerfectMLPackage.COLUMN_DECLARATIONS__PRED_DEF:
        setPred_def(PRED_DEF_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case PerfectMLPackage.COLUMN_DECLARATIONS__TARGET:
        return target != null;
      case PerfectMLPackage.COLUMN_DECLARATIONS__TARGET_DEF:
        return target_def != TARGET_DEF_EDEFAULT;
      case PerfectMLPackage.COLUMN_DECLARATIONS__PREDICTIVE:
        return predictive != null;
      case PerfectMLPackage.COLUMN_DECLARATIONS__PRED_DEF:
        return pred_def != PRED_DEF_EDEFAULT;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (target_def: ");
    result.append(target_def);
    result.append(", pred_def: ");
    result.append(pred_def);
    result.append(')');
    return result.toString();
  }

} //ColumnDeclarationsImpl
