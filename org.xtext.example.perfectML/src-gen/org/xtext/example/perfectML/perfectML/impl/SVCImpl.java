/**
 * generated by Xtext 2.25.0
 */
package org.xtext.example.perfectML.perfectML.impl;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

import org.xtext.example.perfectML.perfectML.BOOL;
import org.xtext.example.perfectML.perfectML.FLOAT;
import org.xtext.example.perfectML.perfectML.PerfectMLPackage;
import org.xtext.example.perfectML.perfectML.SVC;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>SVC</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.example.perfectML.perfectML.impl.SVCImpl#isC_def <em>Cdef</em>}</li>
 *   <li>{@link org.xtext.example.perfectML.perfectML.impl.SVCImpl#getC <em>C</em>}</li>
 *   <li>{@link org.xtext.example.perfectML.perfectML.impl.SVCImpl#isKernel_def <em>Kernel def</em>}</li>
 *   <li>{@link org.xtext.example.perfectML.perfectML.impl.SVCImpl#getKernel <em>Kernel</em>}</li>
 *   <li>{@link org.xtext.example.perfectML.perfectML.impl.SVCImpl#isDegree_def <em>Degree def</em>}</li>
 *   <li>{@link org.xtext.example.perfectML.perfectML.impl.SVCImpl#getDegree <em>Degree</em>}</li>
 *   <li>{@link org.xtext.example.perfectML.perfectML.impl.SVCImpl#isGamma_def <em>Gamma def</em>}</li>
 *   <li>{@link org.xtext.example.perfectML.perfectML.impl.SVCImpl#getGamma <em>Gamma</em>}</li>
 *   <li>{@link org.xtext.example.perfectML.perfectML.impl.SVCImpl#isCoef0_def <em>Coef0 def</em>}</li>
 *   <li>{@link org.xtext.example.perfectML.perfectML.impl.SVCImpl#getCoef0 <em>Coef0</em>}</li>
 *   <li>{@link org.xtext.example.perfectML.perfectML.impl.SVCImpl#isShrinking_def <em>Shrinking def</em>}</li>
 *   <li>{@link org.xtext.example.perfectML.perfectML.impl.SVCImpl#getShrinking <em>Shrinking</em>}</li>
 *   <li>{@link org.xtext.example.perfectML.perfectML.impl.SVCImpl#isProbability_def <em>Probability def</em>}</li>
 *   <li>{@link org.xtext.example.perfectML.perfectML.impl.SVCImpl#getProbability <em>Probability</em>}</li>
 *   <li>{@link org.xtext.example.perfectML.perfectML.impl.SVCImpl#isTol_def <em>Tol def</em>}</li>
 *   <li>{@link org.xtext.example.perfectML.perfectML.impl.SVCImpl#getTol <em>Tol</em>}</li>
 *   <li>{@link org.xtext.example.perfectML.perfectML.impl.SVCImpl#isCache_size_def <em>Cache size def</em>}</li>
 *   <li>{@link org.xtext.example.perfectML.perfectML.impl.SVCImpl#getCache_size <em>Cache size</em>}</li>
 *   <li>{@link org.xtext.example.perfectML.perfectML.impl.SVCImpl#isVerbose_def <em>Verbose def</em>}</li>
 *   <li>{@link org.xtext.example.perfectML.perfectML.impl.SVCImpl#getVerbose <em>Verbose</em>}</li>
 *   <li>{@link org.xtext.example.perfectML.perfectML.impl.SVCImpl#isMax_iter_def <em>Max iter def</em>}</li>
 *   <li>{@link org.xtext.example.perfectML.perfectML.impl.SVCImpl#getMax_iter <em>Max iter</em>}</li>
 *   <li>{@link org.xtext.example.perfectML.perfectML.impl.SVCImpl#isDecision_function_shape_def <em>Decision function shape def</em>}</li>
 *   <li>{@link org.xtext.example.perfectML.perfectML.impl.SVCImpl#getDecision_function_shape <em>Decision function shape</em>}</li>
 *   <li>{@link org.xtext.example.perfectML.perfectML.impl.SVCImpl#isBreak_ties_def <em>Break ties def</em>}</li>
 *   <li>{@link org.xtext.example.perfectML.perfectML.impl.SVCImpl#getBreak_ties <em>Break ties</em>}</li>
 *   <li>{@link org.xtext.example.perfectML.perfectML.impl.SVCImpl#isRandom_state_def <em>Random state def</em>}</li>
 *   <li>{@link org.xtext.example.perfectML.perfectML.impl.SVCImpl#getRandom_state <em>Random state</em>}</li>
 * </ul>
 *
 * @generated
 */
public class SVCImpl extends AlgorithmImpl implements SVC
{
  /**
   * The default value of the '{@link #isC_def() <em>Cdef</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isC_def()
   * @generated
   * @ordered
   */
  protected static final boolean CDEF_EDEFAULT = false;

  /**
   * The cached value of the '{@link #isC_def() <em>Cdef</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isC_def()
   * @generated
   * @ordered
   */
  protected boolean c_def = CDEF_EDEFAULT;

  /**
   * The cached value of the '{@link #getC() <em>C</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getC()
   * @generated
   * @ordered
   */
  protected FLOAT c;

  /**
   * The default value of the '{@link #isKernel_def() <em>Kernel def</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isKernel_def()
   * @generated
   * @ordered
   */
  protected static final boolean KERNEL_DEF_EDEFAULT = false;

  /**
   * The cached value of the '{@link #isKernel_def() <em>Kernel def</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isKernel_def()
   * @generated
   * @ordered
   */
  protected boolean kernel_def = KERNEL_DEF_EDEFAULT;

  /**
   * The default value of the '{@link #getKernel() <em>Kernel</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getKernel()
   * @generated
   * @ordered
   */
  protected static final String KERNEL_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getKernel() <em>Kernel</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getKernel()
   * @generated
   * @ordered
   */
  protected String kernel = KERNEL_EDEFAULT;

  /**
   * The default value of the '{@link #isDegree_def() <em>Degree def</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isDegree_def()
   * @generated
   * @ordered
   */
  protected static final boolean DEGREE_DEF_EDEFAULT = false;

  /**
   * The cached value of the '{@link #isDegree_def() <em>Degree def</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isDegree_def()
   * @generated
   * @ordered
   */
  protected boolean degree_def = DEGREE_DEF_EDEFAULT;

  /**
   * The default value of the '{@link #getDegree() <em>Degree</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDegree()
   * @generated
   * @ordered
   */
  protected static final int DEGREE_EDEFAULT = 0;

  /**
   * The cached value of the '{@link #getDegree() <em>Degree</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDegree()
   * @generated
   * @ordered
   */
  protected int degree = DEGREE_EDEFAULT;

  /**
   * The default value of the '{@link #isGamma_def() <em>Gamma def</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isGamma_def()
   * @generated
   * @ordered
   */
  protected static final boolean GAMMA_DEF_EDEFAULT = false;

  /**
   * The cached value of the '{@link #isGamma_def() <em>Gamma def</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isGamma_def()
   * @generated
   * @ordered
   */
  protected boolean gamma_def = GAMMA_DEF_EDEFAULT;

  /**
   * The default value of the '{@link #getGamma() <em>Gamma</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getGamma()
   * @generated
   * @ordered
   */
  protected static final String GAMMA_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getGamma() <em>Gamma</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getGamma()
   * @generated
   * @ordered
   */
  protected String gamma = GAMMA_EDEFAULT;

  /**
   * The default value of the '{@link #isCoef0_def() <em>Coef0 def</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isCoef0_def()
   * @generated
   * @ordered
   */
  protected static final boolean COEF0_DEF_EDEFAULT = false;

  /**
   * The cached value of the '{@link #isCoef0_def() <em>Coef0 def</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isCoef0_def()
   * @generated
   * @ordered
   */
  protected boolean coef0_def = COEF0_DEF_EDEFAULT;

  /**
   * The cached value of the '{@link #getCoef0() <em>Coef0</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getCoef0()
   * @generated
   * @ordered
   */
  protected FLOAT coef0;

  /**
   * The default value of the '{@link #isShrinking_def() <em>Shrinking def</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isShrinking_def()
   * @generated
   * @ordered
   */
  protected static final boolean SHRINKING_DEF_EDEFAULT = false;

  /**
   * The cached value of the '{@link #isShrinking_def() <em>Shrinking def</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isShrinking_def()
   * @generated
   * @ordered
   */
  protected boolean shrinking_def = SHRINKING_DEF_EDEFAULT;

  /**
   * The cached value of the '{@link #getShrinking() <em>Shrinking</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getShrinking()
   * @generated
   * @ordered
   */
  protected BOOL shrinking;

  /**
   * The default value of the '{@link #isProbability_def() <em>Probability def</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isProbability_def()
   * @generated
   * @ordered
   */
  protected static final boolean PROBABILITY_DEF_EDEFAULT = false;

  /**
   * The cached value of the '{@link #isProbability_def() <em>Probability def</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isProbability_def()
   * @generated
   * @ordered
   */
  protected boolean probability_def = PROBABILITY_DEF_EDEFAULT;

  /**
   * The cached value of the '{@link #getProbability() <em>Probability</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getProbability()
   * @generated
   * @ordered
   */
  protected BOOL probability;

  /**
   * The default value of the '{@link #isTol_def() <em>Tol def</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isTol_def()
   * @generated
   * @ordered
   */
  protected static final boolean TOL_DEF_EDEFAULT = false;

  /**
   * The cached value of the '{@link #isTol_def() <em>Tol def</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isTol_def()
   * @generated
   * @ordered
   */
  protected boolean tol_def = TOL_DEF_EDEFAULT;

  /**
   * The cached value of the '{@link #getTol() <em>Tol</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getTol()
   * @generated
   * @ordered
   */
  protected FLOAT tol;

  /**
   * The default value of the '{@link #isCache_size_def() <em>Cache size def</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isCache_size_def()
   * @generated
   * @ordered
   */
  protected static final boolean CACHE_SIZE_DEF_EDEFAULT = false;

  /**
   * The cached value of the '{@link #isCache_size_def() <em>Cache size def</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isCache_size_def()
   * @generated
   * @ordered
   */
  protected boolean cache_size_def = CACHE_SIZE_DEF_EDEFAULT;

  /**
   * The cached value of the '{@link #getCache_size() <em>Cache size</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getCache_size()
   * @generated
   * @ordered
   */
  protected FLOAT cache_size;

  /**
   * The default value of the '{@link #isVerbose_def() <em>Verbose def</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isVerbose_def()
   * @generated
   * @ordered
   */
  protected static final boolean VERBOSE_DEF_EDEFAULT = false;

  /**
   * The cached value of the '{@link #isVerbose_def() <em>Verbose def</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isVerbose_def()
   * @generated
   * @ordered
   */
  protected boolean verbose_def = VERBOSE_DEF_EDEFAULT;

  /**
   * The cached value of the '{@link #getVerbose() <em>Verbose</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getVerbose()
   * @generated
   * @ordered
   */
  protected BOOL verbose;

  /**
   * The default value of the '{@link #isMax_iter_def() <em>Max iter def</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isMax_iter_def()
   * @generated
   * @ordered
   */
  protected static final boolean MAX_ITER_DEF_EDEFAULT = false;

  /**
   * The cached value of the '{@link #isMax_iter_def() <em>Max iter def</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isMax_iter_def()
   * @generated
   * @ordered
   */
  protected boolean max_iter_def = MAX_ITER_DEF_EDEFAULT;

  /**
   * The default value of the '{@link #getMax_iter() <em>Max iter</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getMax_iter()
   * @generated
   * @ordered
   */
  protected static final int MAX_ITER_EDEFAULT = 0;

  /**
   * The cached value of the '{@link #getMax_iter() <em>Max iter</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getMax_iter()
   * @generated
   * @ordered
   */
  protected int max_iter = MAX_ITER_EDEFAULT;

  /**
   * The default value of the '{@link #isDecision_function_shape_def() <em>Decision function shape def</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isDecision_function_shape_def()
   * @generated
   * @ordered
   */
  protected static final boolean DECISION_FUNCTION_SHAPE_DEF_EDEFAULT = false;

  /**
   * The cached value of the '{@link #isDecision_function_shape_def() <em>Decision function shape def</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isDecision_function_shape_def()
   * @generated
   * @ordered
   */
  protected boolean decision_function_shape_def = DECISION_FUNCTION_SHAPE_DEF_EDEFAULT;

  /**
   * The default value of the '{@link #getDecision_function_shape() <em>Decision function shape</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDecision_function_shape()
   * @generated
   * @ordered
   */
  protected static final String DECISION_FUNCTION_SHAPE_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getDecision_function_shape() <em>Decision function shape</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDecision_function_shape()
   * @generated
   * @ordered
   */
  protected String decision_function_shape = DECISION_FUNCTION_SHAPE_EDEFAULT;

  /**
   * The default value of the '{@link #isBreak_ties_def() <em>Break ties def</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isBreak_ties_def()
   * @generated
   * @ordered
   */
  protected static final boolean BREAK_TIES_DEF_EDEFAULT = false;

  /**
   * The cached value of the '{@link #isBreak_ties_def() <em>Break ties def</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isBreak_ties_def()
   * @generated
   * @ordered
   */
  protected boolean break_ties_def = BREAK_TIES_DEF_EDEFAULT;

  /**
   * The cached value of the '{@link #getBreak_ties() <em>Break ties</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getBreak_ties()
   * @generated
   * @ordered
   */
  protected BOOL break_ties;

  /**
   * The default value of the '{@link #isRandom_state_def() <em>Random state def</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isRandom_state_def()
   * @generated
   * @ordered
   */
  protected static final boolean RANDOM_STATE_DEF_EDEFAULT = false;

  /**
   * The cached value of the '{@link #isRandom_state_def() <em>Random state def</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isRandom_state_def()
   * @generated
   * @ordered
   */
  protected boolean random_state_def = RANDOM_STATE_DEF_EDEFAULT;

  /**
   * The default value of the '{@link #getRandom_state() <em>Random state</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getRandom_state()
   * @generated
   * @ordered
   */
  protected static final int RANDOM_STATE_EDEFAULT = 0;

  /**
   * The cached value of the '{@link #getRandom_state() <em>Random state</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getRandom_state()
   * @generated
   * @ordered
   */
  protected int random_state = RANDOM_STATE_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected SVCImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return PerfectMLPackage.Literals.SVC;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean isC_def()
  {
    return c_def;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setC_def(boolean newC_def)
  {
    boolean oldC_def = c_def;
    c_def = newC_def;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, PerfectMLPackage.SVC__CDEF, oldC_def, c_def));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public FLOAT getC()
  {
    return c;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetC(FLOAT newC, NotificationChain msgs)
  {
    FLOAT oldC = c;
    c = newC;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, PerfectMLPackage.SVC__C, oldC, newC);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setC(FLOAT newC)
  {
    if (newC != c)
    {
      NotificationChain msgs = null;
      if (c != null)
        msgs = ((InternalEObject)c).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - PerfectMLPackage.SVC__C, null, msgs);
      if (newC != null)
        msgs = ((InternalEObject)newC).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - PerfectMLPackage.SVC__C, null, msgs);
      msgs = basicSetC(newC, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, PerfectMLPackage.SVC__C, newC, newC));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean isKernel_def()
  {
    return kernel_def;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setKernel_def(boolean newKernel_def)
  {
    boolean oldKernel_def = kernel_def;
    kernel_def = newKernel_def;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, PerfectMLPackage.SVC__KERNEL_DEF, oldKernel_def, kernel_def));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getKernel()
  {
    return kernel;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setKernel(String newKernel)
  {
    String oldKernel = kernel;
    kernel = newKernel;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, PerfectMLPackage.SVC__KERNEL, oldKernel, kernel));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean isDegree_def()
  {
    return degree_def;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setDegree_def(boolean newDegree_def)
  {
    boolean oldDegree_def = degree_def;
    degree_def = newDegree_def;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, PerfectMLPackage.SVC__DEGREE_DEF, oldDegree_def, degree_def));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public int getDegree()
  {
    return degree;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setDegree(int newDegree)
  {
    int oldDegree = degree;
    degree = newDegree;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, PerfectMLPackage.SVC__DEGREE, oldDegree, degree));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean isGamma_def()
  {
    return gamma_def;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setGamma_def(boolean newGamma_def)
  {
    boolean oldGamma_def = gamma_def;
    gamma_def = newGamma_def;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, PerfectMLPackage.SVC__GAMMA_DEF, oldGamma_def, gamma_def));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getGamma()
  {
    return gamma;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setGamma(String newGamma)
  {
    String oldGamma = gamma;
    gamma = newGamma;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, PerfectMLPackage.SVC__GAMMA, oldGamma, gamma));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean isCoef0_def()
  {
    return coef0_def;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setCoef0_def(boolean newCoef0_def)
  {
    boolean oldCoef0_def = coef0_def;
    coef0_def = newCoef0_def;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, PerfectMLPackage.SVC__COEF0_DEF, oldCoef0_def, coef0_def));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public FLOAT getCoef0()
  {
    return coef0;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetCoef0(FLOAT newCoef0, NotificationChain msgs)
  {
    FLOAT oldCoef0 = coef0;
    coef0 = newCoef0;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, PerfectMLPackage.SVC__COEF0, oldCoef0, newCoef0);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setCoef0(FLOAT newCoef0)
  {
    if (newCoef0 != coef0)
    {
      NotificationChain msgs = null;
      if (coef0 != null)
        msgs = ((InternalEObject)coef0).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - PerfectMLPackage.SVC__COEF0, null, msgs);
      if (newCoef0 != null)
        msgs = ((InternalEObject)newCoef0).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - PerfectMLPackage.SVC__COEF0, null, msgs);
      msgs = basicSetCoef0(newCoef0, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, PerfectMLPackage.SVC__COEF0, newCoef0, newCoef0));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean isShrinking_def()
  {
    return shrinking_def;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setShrinking_def(boolean newShrinking_def)
  {
    boolean oldShrinking_def = shrinking_def;
    shrinking_def = newShrinking_def;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, PerfectMLPackage.SVC__SHRINKING_DEF, oldShrinking_def, shrinking_def));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public BOOL getShrinking()
  {
    return shrinking;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetShrinking(BOOL newShrinking, NotificationChain msgs)
  {
    BOOL oldShrinking = shrinking;
    shrinking = newShrinking;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, PerfectMLPackage.SVC__SHRINKING, oldShrinking, newShrinking);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setShrinking(BOOL newShrinking)
  {
    if (newShrinking != shrinking)
    {
      NotificationChain msgs = null;
      if (shrinking != null)
        msgs = ((InternalEObject)shrinking).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - PerfectMLPackage.SVC__SHRINKING, null, msgs);
      if (newShrinking != null)
        msgs = ((InternalEObject)newShrinking).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - PerfectMLPackage.SVC__SHRINKING, null, msgs);
      msgs = basicSetShrinking(newShrinking, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, PerfectMLPackage.SVC__SHRINKING, newShrinking, newShrinking));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean isProbability_def()
  {
    return probability_def;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setProbability_def(boolean newProbability_def)
  {
    boolean oldProbability_def = probability_def;
    probability_def = newProbability_def;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, PerfectMLPackage.SVC__PROBABILITY_DEF, oldProbability_def, probability_def));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public BOOL getProbability()
  {
    return probability;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetProbability(BOOL newProbability, NotificationChain msgs)
  {
    BOOL oldProbability = probability;
    probability = newProbability;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, PerfectMLPackage.SVC__PROBABILITY, oldProbability, newProbability);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setProbability(BOOL newProbability)
  {
    if (newProbability != probability)
    {
      NotificationChain msgs = null;
      if (probability != null)
        msgs = ((InternalEObject)probability).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - PerfectMLPackage.SVC__PROBABILITY, null, msgs);
      if (newProbability != null)
        msgs = ((InternalEObject)newProbability).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - PerfectMLPackage.SVC__PROBABILITY, null, msgs);
      msgs = basicSetProbability(newProbability, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, PerfectMLPackage.SVC__PROBABILITY, newProbability, newProbability));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean isTol_def()
  {
    return tol_def;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setTol_def(boolean newTol_def)
  {
    boolean oldTol_def = tol_def;
    tol_def = newTol_def;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, PerfectMLPackage.SVC__TOL_DEF, oldTol_def, tol_def));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public FLOAT getTol()
  {
    return tol;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetTol(FLOAT newTol, NotificationChain msgs)
  {
    FLOAT oldTol = tol;
    tol = newTol;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, PerfectMLPackage.SVC__TOL, oldTol, newTol);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setTol(FLOAT newTol)
  {
    if (newTol != tol)
    {
      NotificationChain msgs = null;
      if (tol != null)
        msgs = ((InternalEObject)tol).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - PerfectMLPackage.SVC__TOL, null, msgs);
      if (newTol != null)
        msgs = ((InternalEObject)newTol).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - PerfectMLPackage.SVC__TOL, null, msgs);
      msgs = basicSetTol(newTol, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, PerfectMLPackage.SVC__TOL, newTol, newTol));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean isCache_size_def()
  {
    return cache_size_def;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setCache_size_def(boolean newCache_size_def)
  {
    boolean oldCache_size_def = cache_size_def;
    cache_size_def = newCache_size_def;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, PerfectMLPackage.SVC__CACHE_SIZE_DEF, oldCache_size_def, cache_size_def));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public FLOAT getCache_size()
  {
    return cache_size;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetCache_size(FLOAT newCache_size, NotificationChain msgs)
  {
    FLOAT oldCache_size = cache_size;
    cache_size = newCache_size;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, PerfectMLPackage.SVC__CACHE_SIZE, oldCache_size, newCache_size);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setCache_size(FLOAT newCache_size)
  {
    if (newCache_size != cache_size)
    {
      NotificationChain msgs = null;
      if (cache_size != null)
        msgs = ((InternalEObject)cache_size).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - PerfectMLPackage.SVC__CACHE_SIZE, null, msgs);
      if (newCache_size != null)
        msgs = ((InternalEObject)newCache_size).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - PerfectMLPackage.SVC__CACHE_SIZE, null, msgs);
      msgs = basicSetCache_size(newCache_size, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, PerfectMLPackage.SVC__CACHE_SIZE, newCache_size, newCache_size));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean isVerbose_def()
  {
    return verbose_def;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setVerbose_def(boolean newVerbose_def)
  {
    boolean oldVerbose_def = verbose_def;
    verbose_def = newVerbose_def;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, PerfectMLPackage.SVC__VERBOSE_DEF, oldVerbose_def, verbose_def));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public BOOL getVerbose()
  {
    return verbose;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetVerbose(BOOL newVerbose, NotificationChain msgs)
  {
    BOOL oldVerbose = verbose;
    verbose = newVerbose;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, PerfectMLPackage.SVC__VERBOSE, oldVerbose, newVerbose);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setVerbose(BOOL newVerbose)
  {
    if (newVerbose != verbose)
    {
      NotificationChain msgs = null;
      if (verbose != null)
        msgs = ((InternalEObject)verbose).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - PerfectMLPackage.SVC__VERBOSE, null, msgs);
      if (newVerbose != null)
        msgs = ((InternalEObject)newVerbose).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - PerfectMLPackage.SVC__VERBOSE, null, msgs);
      msgs = basicSetVerbose(newVerbose, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, PerfectMLPackage.SVC__VERBOSE, newVerbose, newVerbose));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean isMax_iter_def()
  {
    return max_iter_def;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setMax_iter_def(boolean newMax_iter_def)
  {
    boolean oldMax_iter_def = max_iter_def;
    max_iter_def = newMax_iter_def;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, PerfectMLPackage.SVC__MAX_ITER_DEF, oldMax_iter_def, max_iter_def));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public int getMax_iter()
  {
    return max_iter;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setMax_iter(int newMax_iter)
  {
    int oldMax_iter = max_iter;
    max_iter = newMax_iter;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, PerfectMLPackage.SVC__MAX_ITER, oldMax_iter, max_iter));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean isDecision_function_shape_def()
  {
    return decision_function_shape_def;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setDecision_function_shape_def(boolean newDecision_function_shape_def)
  {
    boolean oldDecision_function_shape_def = decision_function_shape_def;
    decision_function_shape_def = newDecision_function_shape_def;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, PerfectMLPackage.SVC__DECISION_FUNCTION_SHAPE_DEF, oldDecision_function_shape_def, decision_function_shape_def));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getDecision_function_shape()
  {
    return decision_function_shape;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setDecision_function_shape(String newDecision_function_shape)
  {
    String oldDecision_function_shape = decision_function_shape;
    decision_function_shape = newDecision_function_shape;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, PerfectMLPackage.SVC__DECISION_FUNCTION_SHAPE, oldDecision_function_shape, decision_function_shape));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean isBreak_ties_def()
  {
    return break_ties_def;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setBreak_ties_def(boolean newBreak_ties_def)
  {
    boolean oldBreak_ties_def = break_ties_def;
    break_ties_def = newBreak_ties_def;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, PerfectMLPackage.SVC__BREAK_TIES_DEF, oldBreak_ties_def, break_ties_def));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public BOOL getBreak_ties()
  {
    return break_ties;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetBreak_ties(BOOL newBreak_ties, NotificationChain msgs)
  {
    BOOL oldBreak_ties = break_ties;
    break_ties = newBreak_ties;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, PerfectMLPackage.SVC__BREAK_TIES, oldBreak_ties, newBreak_ties);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setBreak_ties(BOOL newBreak_ties)
  {
    if (newBreak_ties != break_ties)
    {
      NotificationChain msgs = null;
      if (break_ties != null)
        msgs = ((InternalEObject)break_ties).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - PerfectMLPackage.SVC__BREAK_TIES, null, msgs);
      if (newBreak_ties != null)
        msgs = ((InternalEObject)newBreak_ties).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - PerfectMLPackage.SVC__BREAK_TIES, null, msgs);
      msgs = basicSetBreak_ties(newBreak_ties, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, PerfectMLPackage.SVC__BREAK_TIES, newBreak_ties, newBreak_ties));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean isRandom_state_def()
  {
    return random_state_def;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setRandom_state_def(boolean newRandom_state_def)
  {
    boolean oldRandom_state_def = random_state_def;
    random_state_def = newRandom_state_def;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, PerfectMLPackage.SVC__RANDOM_STATE_DEF, oldRandom_state_def, random_state_def));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public int getRandom_state()
  {
    return random_state;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setRandom_state(int newRandom_state)
  {
    int oldRandom_state = random_state;
    random_state = newRandom_state;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, PerfectMLPackage.SVC__RANDOM_STATE, oldRandom_state, random_state));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case PerfectMLPackage.SVC__C:
        return basicSetC(null, msgs);
      case PerfectMLPackage.SVC__COEF0:
        return basicSetCoef0(null, msgs);
      case PerfectMLPackage.SVC__SHRINKING:
        return basicSetShrinking(null, msgs);
      case PerfectMLPackage.SVC__PROBABILITY:
        return basicSetProbability(null, msgs);
      case PerfectMLPackage.SVC__TOL:
        return basicSetTol(null, msgs);
      case PerfectMLPackage.SVC__CACHE_SIZE:
        return basicSetCache_size(null, msgs);
      case PerfectMLPackage.SVC__VERBOSE:
        return basicSetVerbose(null, msgs);
      case PerfectMLPackage.SVC__BREAK_TIES:
        return basicSetBreak_ties(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case PerfectMLPackage.SVC__CDEF:
        return isC_def();
      case PerfectMLPackage.SVC__C:
        return getC();
      case PerfectMLPackage.SVC__KERNEL_DEF:
        return isKernel_def();
      case PerfectMLPackage.SVC__KERNEL:
        return getKernel();
      case PerfectMLPackage.SVC__DEGREE_DEF:
        return isDegree_def();
      case PerfectMLPackage.SVC__DEGREE:
        return getDegree();
      case PerfectMLPackage.SVC__GAMMA_DEF:
        return isGamma_def();
      case PerfectMLPackage.SVC__GAMMA:
        return getGamma();
      case PerfectMLPackage.SVC__COEF0_DEF:
        return isCoef0_def();
      case PerfectMLPackage.SVC__COEF0:
        return getCoef0();
      case PerfectMLPackage.SVC__SHRINKING_DEF:
        return isShrinking_def();
      case PerfectMLPackage.SVC__SHRINKING:
        return getShrinking();
      case PerfectMLPackage.SVC__PROBABILITY_DEF:
        return isProbability_def();
      case PerfectMLPackage.SVC__PROBABILITY:
        return getProbability();
      case PerfectMLPackage.SVC__TOL_DEF:
        return isTol_def();
      case PerfectMLPackage.SVC__TOL:
        return getTol();
      case PerfectMLPackage.SVC__CACHE_SIZE_DEF:
        return isCache_size_def();
      case PerfectMLPackage.SVC__CACHE_SIZE:
        return getCache_size();
      case PerfectMLPackage.SVC__VERBOSE_DEF:
        return isVerbose_def();
      case PerfectMLPackage.SVC__VERBOSE:
        return getVerbose();
      case PerfectMLPackage.SVC__MAX_ITER_DEF:
        return isMax_iter_def();
      case PerfectMLPackage.SVC__MAX_ITER:
        return getMax_iter();
      case PerfectMLPackage.SVC__DECISION_FUNCTION_SHAPE_DEF:
        return isDecision_function_shape_def();
      case PerfectMLPackage.SVC__DECISION_FUNCTION_SHAPE:
        return getDecision_function_shape();
      case PerfectMLPackage.SVC__BREAK_TIES_DEF:
        return isBreak_ties_def();
      case PerfectMLPackage.SVC__BREAK_TIES:
        return getBreak_ties();
      case PerfectMLPackage.SVC__RANDOM_STATE_DEF:
        return isRandom_state_def();
      case PerfectMLPackage.SVC__RANDOM_STATE:
        return getRandom_state();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case PerfectMLPackage.SVC__CDEF:
        setC_def((Boolean)newValue);
        return;
      case PerfectMLPackage.SVC__C:
        setC((FLOAT)newValue);
        return;
      case PerfectMLPackage.SVC__KERNEL_DEF:
        setKernel_def((Boolean)newValue);
        return;
      case PerfectMLPackage.SVC__KERNEL:
        setKernel((String)newValue);
        return;
      case PerfectMLPackage.SVC__DEGREE_DEF:
        setDegree_def((Boolean)newValue);
        return;
      case PerfectMLPackage.SVC__DEGREE:
        setDegree((Integer)newValue);
        return;
      case PerfectMLPackage.SVC__GAMMA_DEF:
        setGamma_def((Boolean)newValue);
        return;
      case PerfectMLPackage.SVC__GAMMA:
        setGamma((String)newValue);
        return;
      case PerfectMLPackage.SVC__COEF0_DEF:
        setCoef0_def((Boolean)newValue);
        return;
      case PerfectMLPackage.SVC__COEF0:
        setCoef0((FLOAT)newValue);
        return;
      case PerfectMLPackage.SVC__SHRINKING_DEF:
        setShrinking_def((Boolean)newValue);
        return;
      case PerfectMLPackage.SVC__SHRINKING:
        setShrinking((BOOL)newValue);
        return;
      case PerfectMLPackage.SVC__PROBABILITY_DEF:
        setProbability_def((Boolean)newValue);
        return;
      case PerfectMLPackage.SVC__PROBABILITY:
        setProbability((BOOL)newValue);
        return;
      case PerfectMLPackage.SVC__TOL_DEF:
        setTol_def((Boolean)newValue);
        return;
      case PerfectMLPackage.SVC__TOL:
        setTol((FLOAT)newValue);
        return;
      case PerfectMLPackage.SVC__CACHE_SIZE_DEF:
        setCache_size_def((Boolean)newValue);
        return;
      case PerfectMLPackage.SVC__CACHE_SIZE:
        setCache_size((FLOAT)newValue);
        return;
      case PerfectMLPackage.SVC__VERBOSE_DEF:
        setVerbose_def((Boolean)newValue);
        return;
      case PerfectMLPackage.SVC__VERBOSE:
        setVerbose((BOOL)newValue);
        return;
      case PerfectMLPackage.SVC__MAX_ITER_DEF:
        setMax_iter_def((Boolean)newValue);
        return;
      case PerfectMLPackage.SVC__MAX_ITER:
        setMax_iter((Integer)newValue);
        return;
      case PerfectMLPackage.SVC__DECISION_FUNCTION_SHAPE_DEF:
        setDecision_function_shape_def((Boolean)newValue);
        return;
      case PerfectMLPackage.SVC__DECISION_FUNCTION_SHAPE:
        setDecision_function_shape((String)newValue);
        return;
      case PerfectMLPackage.SVC__BREAK_TIES_DEF:
        setBreak_ties_def((Boolean)newValue);
        return;
      case PerfectMLPackage.SVC__BREAK_TIES:
        setBreak_ties((BOOL)newValue);
        return;
      case PerfectMLPackage.SVC__RANDOM_STATE_DEF:
        setRandom_state_def((Boolean)newValue);
        return;
      case PerfectMLPackage.SVC__RANDOM_STATE:
        setRandom_state((Integer)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case PerfectMLPackage.SVC__CDEF:
        setC_def(CDEF_EDEFAULT);
        return;
      case PerfectMLPackage.SVC__C:
        setC((FLOAT)null);
        return;
      case PerfectMLPackage.SVC__KERNEL_DEF:
        setKernel_def(KERNEL_DEF_EDEFAULT);
        return;
      case PerfectMLPackage.SVC__KERNEL:
        setKernel(KERNEL_EDEFAULT);
        return;
      case PerfectMLPackage.SVC__DEGREE_DEF:
        setDegree_def(DEGREE_DEF_EDEFAULT);
        return;
      case PerfectMLPackage.SVC__DEGREE:
        setDegree(DEGREE_EDEFAULT);
        return;
      case PerfectMLPackage.SVC__GAMMA_DEF:
        setGamma_def(GAMMA_DEF_EDEFAULT);
        return;
      case PerfectMLPackage.SVC__GAMMA:
        setGamma(GAMMA_EDEFAULT);
        return;
      case PerfectMLPackage.SVC__COEF0_DEF:
        setCoef0_def(COEF0_DEF_EDEFAULT);
        return;
      case PerfectMLPackage.SVC__COEF0:
        setCoef0((FLOAT)null);
        return;
      case PerfectMLPackage.SVC__SHRINKING_DEF:
        setShrinking_def(SHRINKING_DEF_EDEFAULT);
        return;
      case PerfectMLPackage.SVC__SHRINKING:
        setShrinking((BOOL)null);
        return;
      case PerfectMLPackage.SVC__PROBABILITY_DEF:
        setProbability_def(PROBABILITY_DEF_EDEFAULT);
        return;
      case PerfectMLPackage.SVC__PROBABILITY:
        setProbability((BOOL)null);
        return;
      case PerfectMLPackage.SVC__TOL_DEF:
        setTol_def(TOL_DEF_EDEFAULT);
        return;
      case PerfectMLPackage.SVC__TOL:
        setTol((FLOAT)null);
        return;
      case PerfectMLPackage.SVC__CACHE_SIZE_DEF:
        setCache_size_def(CACHE_SIZE_DEF_EDEFAULT);
        return;
      case PerfectMLPackage.SVC__CACHE_SIZE:
        setCache_size((FLOAT)null);
        return;
      case PerfectMLPackage.SVC__VERBOSE_DEF:
        setVerbose_def(VERBOSE_DEF_EDEFAULT);
        return;
      case PerfectMLPackage.SVC__VERBOSE:
        setVerbose((BOOL)null);
        return;
      case PerfectMLPackage.SVC__MAX_ITER_DEF:
        setMax_iter_def(MAX_ITER_DEF_EDEFAULT);
        return;
      case PerfectMLPackage.SVC__MAX_ITER:
        setMax_iter(MAX_ITER_EDEFAULT);
        return;
      case PerfectMLPackage.SVC__DECISION_FUNCTION_SHAPE_DEF:
        setDecision_function_shape_def(DECISION_FUNCTION_SHAPE_DEF_EDEFAULT);
        return;
      case PerfectMLPackage.SVC__DECISION_FUNCTION_SHAPE:
        setDecision_function_shape(DECISION_FUNCTION_SHAPE_EDEFAULT);
        return;
      case PerfectMLPackage.SVC__BREAK_TIES_DEF:
        setBreak_ties_def(BREAK_TIES_DEF_EDEFAULT);
        return;
      case PerfectMLPackage.SVC__BREAK_TIES:
        setBreak_ties((BOOL)null);
        return;
      case PerfectMLPackage.SVC__RANDOM_STATE_DEF:
        setRandom_state_def(RANDOM_STATE_DEF_EDEFAULT);
        return;
      case PerfectMLPackage.SVC__RANDOM_STATE:
        setRandom_state(RANDOM_STATE_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case PerfectMLPackage.SVC__CDEF:
        return c_def != CDEF_EDEFAULT;
      case PerfectMLPackage.SVC__C:
        return c != null;
      case PerfectMLPackage.SVC__KERNEL_DEF:
        return kernel_def != KERNEL_DEF_EDEFAULT;
      case PerfectMLPackage.SVC__KERNEL:
        return KERNEL_EDEFAULT == null ? kernel != null : !KERNEL_EDEFAULT.equals(kernel);
      case PerfectMLPackage.SVC__DEGREE_DEF:
        return degree_def != DEGREE_DEF_EDEFAULT;
      case PerfectMLPackage.SVC__DEGREE:
        return degree != DEGREE_EDEFAULT;
      case PerfectMLPackage.SVC__GAMMA_DEF:
        return gamma_def != GAMMA_DEF_EDEFAULT;
      case PerfectMLPackage.SVC__GAMMA:
        return GAMMA_EDEFAULT == null ? gamma != null : !GAMMA_EDEFAULT.equals(gamma);
      case PerfectMLPackage.SVC__COEF0_DEF:
        return coef0_def != COEF0_DEF_EDEFAULT;
      case PerfectMLPackage.SVC__COEF0:
        return coef0 != null;
      case PerfectMLPackage.SVC__SHRINKING_DEF:
        return shrinking_def != SHRINKING_DEF_EDEFAULT;
      case PerfectMLPackage.SVC__SHRINKING:
        return shrinking != null;
      case PerfectMLPackage.SVC__PROBABILITY_DEF:
        return probability_def != PROBABILITY_DEF_EDEFAULT;
      case PerfectMLPackage.SVC__PROBABILITY:
        return probability != null;
      case PerfectMLPackage.SVC__TOL_DEF:
        return tol_def != TOL_DEF_EDEFAULT;
      case PerfectMLPackage.SVC__TOL:
        return tol != null;
      case PerfectMLPackage.SVC__CACHE_SIZE_DEF:
        return cache_size_def != CACHE_SIZE_DEF_EDEFAULT;
      case PerfectMLPackage.SVC__CACHE_SIZE:
        return cache_size != null;
      case PerfectMLPackage.SVC__VERBOSE_DEF:
        return verbose_def != VERBOSE_DEF_EDEFAULT;
      case PerfectMLPackage.SVC__VERBOSE:
        return verbose != null;
      case PerfectMLPackage.SVC__MAX_ITER_DEF:
        return max_iter_def != MAX_ITER_DEF_EDEFAULT;
      case PerfectMLPackage.SVC__MAX_ITER:
        return max_iter != MAX_ITER_EDEFAULT;
      case PerfectMLPackage.SVC__DECISION_FUNCTION_SHAPE_DEF:
        return decision_function_shape_def != DECISION_FUNCTION_SHAPE_DEF_EDEFAULT;
      case PerfectMLPackage.SVC__DECISION_FUNCTION_SHAPE:
        return DECISION_FUNCTION_SHAPE_EDEFAULT == null ? decision_function_shape != null : !DECISION_FUNCTION_SHAPE_EDEFAULT.equals(decision_function_shape);
      case PerfectMLPackage.SVC__BREAK_TIES_DEF:
        return break_ties_def != BREAK_TIES_DEF_EDEFAULT;
      case PerfectMLPackage.SVC__BREAK_TIES:
        return break_ties != null;
      case PerfectMLPackage.SVC__RANDOM_STATE_DEF:
        return random_state_def != RANDOM_STATE_DEF_EDEFAULT;
      case PerfectMLPackage.SVC__RANDOM_STATE:
        return random_state != RANDOM_STATE_EDEFAULT;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (C_def: ");
    result.append(c_def);
    result.append(", kernel_def: ");
    result.append(kernel_def);
    result.append(", kernel: ");
    result.append(kernel);
    result.append(", degree_def: ");
    result.append(degree_def);
    result.append(", degree: ");
    result.append(degree);
    result.append(", gamma_def: ");
    result.append(gamma_def);
    result.append(", gamma: ");
    result.append(gamma);
    result.append(", coef0_def: ");
    result.append(coef0_def);
    result.append(", shrinking_def: ");
    result.append(shrinking_def);
    result.append(", probability_def: ");
    result.append(probability_def);
    result.append(", tol_def: ");
    result.append(tol_def);
    result.append(", cache_size_def: ");
    result.append(cache_size_def);
    result.append(", verbose_def: ");
    result.append(verbose_def);
    result.append(", max_iter_def: ");
    result.append(max_iter_def);
    result.append(", max_iter: ");
    result.append(max_iter);
    result.append(", decision_function_shape_def: ");
    result.append(decision_function_shape_def);
    result.append(", decision_function_shape: ");
    result.append(decision_function_shape);
    result.append(", break_ties_def: ");
    result.append(break_ties_def);
    result.append(", random_state_def: ");
    result.append(random_state_def);
    result.append(", random_state: ");
    result.append(random_state);
    result.append(')');
    return result.toString();
  }

} //SVCImpl
