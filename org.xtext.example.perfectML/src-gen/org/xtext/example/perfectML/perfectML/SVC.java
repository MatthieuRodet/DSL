/**
 * generated by Xtext 2.25.0
 */
package org.xtext.example.perfectML.perfectML;


/**
 * <!-- begin-user-doc -->
 * A representation of the model object '<em><b>SVC</b></em>'.
 * <!-- end-user-doc -->
 *
 * <p>
 * The following features are supported:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.example.perfectML.perfectML.SVC#isC_def <em>Cdef</em>}</li>
 *   <li>{@link org.xtext.example.perfectML.perfectML.SVC#getC <em>C</em>}</li>
 *   <li>{@link org.xtext.example.perfectML.perfectML.SVC#isKernel_def <em>Kernel def</em>}</li>
 *   <li>{@link org.xtext.example.perfectML.perfectML.SVC#getKernel <em>Kernel</em>}</li>
 *   <li>{@link org.xtext.example.perfectML.perfectML.SVC#isDegree_def <em>Degree def</em>}</li>
 *   <li>{@link org.xtext.example.perfectML.perfectML.SVC#getDegree <em>Degree</em>}</li>
 *   <li>{@link org.xtext.example.perfectML.perfectML.SVC#isGamma_def <em>Gamma def</em>}</li>
 *   <li>{@link org.xtext.example.perfectML.perfectML.SVC#getGamma <em>Gamma</em>}</li>
 *   <li>{@link org.xtext.example.perfectML.perfectML.SVC#isCoef0_def <em>Coef0 def</em>}</li>
 *   <li>{@link org.xtext.example.perfectML.perfectML.SVC#getCoef0 <em>Coef0</em>}</li>
 *   <li>{@link org.xtext.example.perfectML.perfectML.SVC#isShrinking_def <em>Shrinking def</em>}</li>
 *   <li>{@link org.xtext.example.perfectML.perfectML.SVC#getShrinking <em>Shrinking</em>}</li>
 *   <li>{@link org.xtext.example.perfectML.perfectML.SVC#isProbability_def <em>Probability def</em>}</li>
 *   <li>{@link org.xtext.example.perfectML.perfectML.SVC#getProbability <em>Probability</em>}</li>
 *   <li>{@link org.xtext.example.perfectML.perfectML.SVC#isTol_def <em>Tol def</em>}</li>
 *   <li>{@link org.xtext.example.perfectML.perfectML.SVC#getTol <em>Tol</em>}</li>
 *   <li>{@link org.xtext.example.perfectML.perfectML.SVC#isCache_size_def <em>Cache size def</em>}</li>
 *   <li>{@link org.xtext.example.perfectML.perfectML.SVC#getCache_size <em>Cache size</em>}</li>
 *   <li>{@link org.xtext.example.perfectML.perfectML.SVC#isVerbose_def <em>Verbose def</em>}</li>
 *   <li>{@link org.xtext.example.perfectML.perfectML.SVC#getVerbose <em>Verbose</em>}</li>
 *   <li>{@link org.xtext.example.perfectML.perfectML.SVC#isMax_iter_def <em>Max iter def</em>}</li>
 *   <li>{@link org.xtext.example.perfectML.perfectML.SVC#getMax_iter <em>Max iter</em>}</li>
 *   <li>{@link org.xtext.example.perfectML.perfectML.SVC#isDecision_function_shape_def <em>Decision function shape def</em>}</li>
 *   <li>{@link org.xtext.example.perfectML.perfectML.SVC#getDecision_function_shape <em>Decision function shape</em>}</li>
 *   <li>{@link org.xtext.example.perfectML.perfectML.SVC#isBreak_ties_def <em>Break ties def</em>}</li>
 *   <li>{@link org.xtext.example.perfectML.perfectML.SVC#getBreak_ties <em>Break ties</em>}</li>
 *   <li>{@link org.xtext.example.perfectML.perfectML.SVC#isRandom_state_def <em>Random state def</em>}</li>
 *   <li>{@link org.xtext.example.perfectML.perfectML.SVC#getRandom_state <em>Random state</em>}</li>
 * </ul>
 *
 * @see org.xtext.example.perfectML.perfectML.PerfectMLPackage#getSVC()
 * @model
 * @generated
 */
public interface SVC extends Algorithm
{
  /**
   * Returns the value of the '<em><b>Cdef</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Cdef</em>' attribute.
   * @see #setC_def(boolean)
   * @see org.xtext.example.perfectML.perfectML.PerfectMLPackage#getSVC_C_def()
   * @model
   * @generated
   */
  boolean isC_def();

  /**
   * Sets the value of the '{@link org.xtext.example.perfectML.perfectML.SVC#isC_def <em>Cdef</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Cdef</em>' attribute.
   * @see #isC_def()
   * @generated
   */
  void setC_def(boolean value);

  /**
   * Returns the value of the '<em><b>C</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>C</em>' containment reference.
   * @see #setC(FLOAT)
   * @see org.xtext.example.perfectML.perfectML.PerfectMLPackage#getSVC_C()
   * @model containment="true"
   * @generated
   */
  FLOAT getC();

  /**
   * Sets the value of the '{@link org.xtext.example.perfectML.perfectML.SVC#getC <em>C</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>C</em>' containment reference.
   * @see #getC()
   * @generated
   */
  void setC(FLOAT value);

  /**
   * Returns the value of the '<em><b>Kernel def</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Kernel def</em>' attribute.
   * @see #setKernel_def(boolean)
   * @see org.xtext.example.perfectML.perfectML.PerfectMLPackage#getSVC_Kernel_def()
   * @model
   * @generated
   */
  boolean isKernel_def();

  /**
   * Sets the value of the '{@link org.xtext.example.perfectML.perfectML.SVC#isKernel_def <em>Kernel def</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Kernel def</em>' attribute.
   * @see #isKernel_def()
   * @generated
   */
  void setKernel_def(boolean value);

  /**
   * Returns the value of the '<em><b>Kernel</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Kernel</em>' attribute.
   * @see #setKernel(String)
   * @see org.xtext.example.perfectML.perfectML.PerfectMLPackage#getSVC_Kernel()
   * @model
   * @generated
   */
  String getKernel();

  /**
   * Sets the value of the '{@link org.xtext.example.perfectML.perfectML.SVC#getKernel <em>Kernel</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Kernel</em>' attribute.
   * @see #getKernel()
   * @generated
   */
  void setKernel(String value);

  /**
   * Returns the value of the '<em><b>Degree def</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Degree def</em>' attribute.
   * @see #setDegree_def(boolean)
   * @see org.xtext.example.perfectML.perfectML.PerfectMLPackage#getSVC_Degree_def()
   * @model
   * @generated
   */
  boolean isDegree_def();

  /**
   * Sets the value of the '{@link org.xtext.example.perfectML.perfectML.SVC#isDegree_def <em>Degree def</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Degree def</em>' attribute.
   * @see #isDegree_def()
   * @generated
   */
  void setDegree_def(boolean value);

  /**
   * Returns the value of the '<em><b>Degree</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Degree</em>' attribute.
   * @see #setDegree(int)
   * @see org.xtext.example.perfectML.perfectML.PerfectMLPackage#getSVC_Degree()
   * @model
   * @generated
   */
  int getDegree();

  /**
   * Sets the value of the '{@link org.xtext.example.perfectML.perfectML.SVC#getDegree <em>Degree</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Degree</em>' attribute.
   * @see #getDegree()
   * @generated
   */
  void setDegree(int value);

  /**
   * Returns the value of the '<em><b>Gamma def</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Gamma def</em>' attribute.
   * @see #setGamma_def(boolean)
   * @see org.xtext.example.perfectML.perfectML.PerfectMLPackage#getSVC_Gamma_def()
   * @model
   * @generated
   */
  boolean isGamma_def();

  /**
   * Sets the value of the '{@link org.xtext.example.perfectML.perfectML.SVC#isGamma_def <em>Gamma def</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Gamma def</em>' attribute.
   * @see #isGamma_def()
   * @generated
   */
  void setGamma_def(boolean value);

  /**
   * Returns the value of the '<em><b>Gamma</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Gamma</em>' attribute.
   * @see #setGamma(String)
   * @see org.xtext.example.perfectML.perfectML.PerfectMLPackage#getSVC_Gamma()
   * @model
   * @generated
   */
  String getGamma();

  /**
   * Sets the value of the '{@link org.xtext.example.perfectML.perfectML.SVC#getGamma <em>Gamma</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Gamma</em>' attribute.
   * @see #getGamma()
   * @generated
   */
  void setGamma(String value);

  /**
   * Returns the value of the '<em><b>Coef0 def</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Coef0 def</em>' attribute.
   * @see #setCoef0_def(boolean)
   * @see org.xtext.example.perfectML.perfectML.PerfectMLPackage#getSVC_Coef0_def()
   * @model
   * @generated
   */
  boolean isCoef0_def();

  /**
   * Sets the value of the '{@link org.xtext.example.perfectML.perfectML.SVC#isCoef0_def <em>Coef0 def</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Coef0 def</em>' attribute.
   * @see #isCoef0_def()
   * @generated
   */
  void setCoef0_def(boolean value);

  /**
   * Returns the value of the '<em><b>Coef0</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Coef0</em>' containment reference.
   * @see #setCoef0(FLOAT)
   * @see org.xtext.example.perfectML.perfectML.PerfectMLPackage#getSVC_Coef0()
   * @model containment="true"
   * @generated
   */
  FLOAT getCoef0();

  /**
   * Sets the value of the '{@link org.xtext.example.perfectML.perfectML.SVC#getCoef0 <em>Coef0</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Coef0</em>' containment reference.
   * @see #getCoef0()
   * @generated
   */
  void setCoef0(FLOAT value);

  /**
   * Returns the value of the '<em><b>Shrinking def</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Shrinking def</em>' attribute.
   * @see #setShrinking_def(boolean)
   * @see org.xtext.example.perfectML.perfectML.PerfectMLPackage#getSVC_Shrinking_def()
   * @model
   * @generated
   */
  boolean isShrinking_def();

  /**
   * Sets the value of the '{@link org.xtext.example.perfectML.perfectML.SVC#isShrinking_def <em>Shrinking def</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Shrinking def</em>' attribute.
   * @see #isShrinking_def()
   * @generated
   */
  void setShrinking_def(boolean value);

  /**
   * Returns the value of the '<em><b>Shrinking</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Shrinking</em>' containment reference.
   * @see #setShrinking(BOOL)
   * @see org.xtext.example.perfectML.perfectML.PerfectMLPackage#getSVC_Shrinking()
   * @model containment="true"
   * @generated
   */
  BOOL getShrinking();

  /**
   * Sets the value of the '{@link org.xtext.example.perfectML.perfectML.SVC#getShrinking <em>Shrinking</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Shrinking</em>' containment reference.
   * @see #getShrinking()
   * @generated
   */
  void setShrinking(BOOL value);

  /**
   * Returns the value of the '<em><b>Probability def</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Probability def</em>' attribute.
   * @see #setProbability_def(boolean)
   * @see org.xtext.example.perfectML.perfectML.PerfectMLPackage#getSVC_Probability_def()
   * @model
   * @generated
   */
  boolean isProbability_def();

  /**
   * Sets the value of the '{@link org.xtext.example.perfectML.perfectML.SVC#isProbability_def <em>Probability def</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Probability def</em>' attribute.
   * @see #isProbability_def()
   * @generated
   */
  void setProbability_def(boolean value);

  /**
   * Returns the value of the '<em><b>Probability</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Probability</em>' containment reference.
   * @see #setProbability(BOOL)
   * @see org.xtext.example.perfectML.perfectML.PerfectMLPackage#getSVC_Probability()
   * @model containment="true"
   * @generated
   */
  BOOL getProbability();

  /**
   * Sets the value of the '{@link org.xtext.example.perfectML.perfectML.SVC#getProbability <em>Probability</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Probability</em>' containment reference.
   * @see #getProbability()
   * @generated
   */
  void setProbability(BOOL value);

  /**
   * Returns the value of the '<em><b>Tol def</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Tol def</em>' attribute.
   * @see #setTol_def(boolean)
   * @see org.xtext.example.perfectML.perfectML.PerfectMLPackage#getSVC_Tol_def()
   * @model
   * @generated
   */
  boolean isTol_def();

  /**
   * Sets the value of the '{@link org.xtext.example.perfectML.perfectML.SVC#isTol_def <em>Tol def</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Tol def</em>' attribute.
   * @see #isTol_def()
   * @generated
   */
  void setTol_def(boolean value);

  /**
   * Returns the value of the '<em><b>Tol</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Tol</em>' containment reference.
   * @see #setTol(FLOAT)
   * @see org.xtext.example.perfectML.perfectML.PerfectMLPackage#getSVC_Tol()
   * @model containment="true"
   * @generated
   */
  FLOAT getTol();

  /**
   * Sets the value of the '{@link org.xtext.example.perfectML.perfectML.SVC#getTol <em>Tol</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Tol</em>' containment reference.
   * @see #getTol()
   * @generated
   */
  void setTol(FLOAT value);

  /**
   * Returns the value of the '<em><b>Cache size def</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Cache size def</em>' attribute.
   * @see #setCache_size_def(boolean)
   * @see org.xtext.example.perfectML.perfectML.PerfectMLPackage#getSVC_Cache_size_def()
   * @model
   * @generated
   */
  boolean isCache_size_def();

  /**
   * Sets the value of the '{@link org.xtext.example.perfectML.perfectML.SVC#isCache_size_def <em>Cache size def</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Cache size def</em>' attribute.
   * @see #isCache_size_def()
   * @generated
   */
  void setCache_size_def(boolean value);

  /**
   * Returns the value of the '<em><b>Cache size</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Cache size</em>' containment reference.
   * @see #setCache_size(FLOAT)
   * @see org.xtext.example.perfectML.perfectML.PerfectMLPackage#getSVC_Cache_size()
   * @model containment="true"
   * @generated
   */
  FLOAT getCache_size();

  /**
   * Sets the value of the '{@link org.xtext.example.perfectML.perfectML.SVC#getCache_size <em>Cache size</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Cache size</em>' containment reference.
   * @see #getCache_size()
   * @generated
   */
  void setCache_size(FLOAT value);

  /**
   * Returns the value of the '<em><b>Verbose def</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Verbose def</em>' attribute.
   * @see #setVerbose_def(boolean)
   * @see org.xtext.example.perfectML.perfectML.PerfectMLPackage#getSVC_Verbose_def()
   * @model
   * @generated
   */
  boolean isVerbose_def();

  /**
   * Sets the value of the '{@link org.xtext.example.perfectML.perfectML.SVC#isVerbose_def <em>Verbose def</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Verbose def</em>' attribute.
   * @see #isVerbose_def()
   * @generated
   */
  void setVerbose_def(boolean value);

  /**
   * Returns the value of the '<em><b>Verbose</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Verbose</em>' containment reference.
   * @see #setVerbose(BOOL)
   * @see org.xtext.example.perfectML.perfectML.PerfectMLPackage#getSVC_Verbose()
   * @model containment="true"
   * @generated
   */
  BOOL getVerbose();

  /**
   * Sets the value of the '{@link org.xtext.example.perfectML.perfectML.SVC#getVerbose <em>Verbose</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Verbose</em>' containment reference.
   * @see #getVerbose()
   * @generated
   */
  void setVerbose(BOOL value);

  /**
   * Returns the value of the '<em><b>Max iter def</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Max iter def</em>' attribute.
   * @see #setMax_iter_def(boolean)
   * @see org.xtext.example.perfectML.perfectML.PerfectMLPackage#getSVC_Max_iter_def()
   * @model
   * @generated
   */
  boolean isMax_iter_def();

  /**
   * Sets the value of the '{@link org.xtext.example.perfectML.perfectML.SVC#isMax_iter_def <em>Max iter def</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Max iter def</em>' attribute.
   * @see #isMax_iter_def()
   * @generated
   */
  void setMax_iter_def(boolean value);

  /**
   * Returns the value of the '<em><b>Max iter</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Max iter</em>' attribute.
   * @see #setMax_iter(int)
   * @see org.xtext.example.perfectML.perfectML.PerfectMLPackage#getSVC_Max_iter()
   * @model
   * @generated
   */
  int getMax_iter();

  /**
   * Sets the value of the '{@link org.xtext.example.perfectML.perfectML.SVC#getMax_iter <em>Max iter</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Max iter</em>' attribute.
   * @see #getMax_iter()
   * @generated
   */
  void setMax_iter(int value);

  /**
   * Returns the value of the '<em><b>Decision function shape def</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Decision function shape def</em>' attribute.
   * @see #setDecision_function_shape_def(boolean)
   * @see org.xtext.example.perfectML.perfectML.PerfectMLPackage#getSVC_Decision_function_shape_def()
   * @model
   * @generated
   */
  boolean isDecision_function_shape_def();

  /**
   * Sets the value of the '{@link org.xtext.example.perfectML.perfectML.SVC#isDecision_function_shape_def <em>Decision function shape def</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Decision function shape def</em>' attribute.
   * @see #isDecision_function_shape_def()
   * @generated
   */
  void setDecision_function_shape_def(boolean value);

  /**
   * Returns the value of the '<em><b>Decision function shape</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Decision function shape</em>' attribute.
   * @see #setDecision_function_shape(String)
   * @see org.xtext.example.perfectML.perfectML.PerfectMLPackage#getSVC_Decision_function_shape()
   * @model
   * @generated
   */
  String getDecision_function_shape();

  /**
   * Sets the value of the '{@link org.xtext.example.perfectML.perfectML.SVC#getDecision_function_shape <em>Decision function shape</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Decision function shape</em>' attribute.
   * @see #getDecision_function_shape()
   * @generated
   */
  void setDecision_function_shape(String value);

  /**
   * Returns the value of the '<em><b>Break ties def</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Break ties def</em>' attribute.
   * @see #setBreak_ties_def(boolean)
   * @see org.xtext.example.perfectML.perfectML.PerfectMLPackage#getSVC_Break_ties_def()
   * @model
   * @generated
   */
  boolean isBreak_ties_def();

  /**
   * Sets the value of the '{@link org.xtext.example.perfectML.perfectML.SVC#isBreak_ties_def <em>Break ties def</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Break ties def</em>' attribute.
   * @see #isBreak_ties_def()
   * @generated
   */
  void setBreak_ties_def(boolean value);

  /**
   * Returns the value of the '<em><b>Break ties</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Break ties</em>' containment reference.
   * @see #setBreak_ties(BOOL)
   * @see org.xtext.example.perfectML.perfectML.PerfectMLPackage#getSVC_Break_ties()
   * @model containment="true"
   * @generated
   */
  BOOL getBreak_ties();

  /**
   * Sets the value of the '{@link org.xtext.example.perfectML.perfectML.SVC#getBreak_ties <em>Break ties</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Break ties</em>' containment reference.
   * @see #getBreak_ties()
   * @generated
   */
  void setBreak_ties(BOOL value);

  /**
   * Returns the value of the '<em><b>Random state def</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Random state def</em>' attribute.
   * @see #setRandom_state_def(boolean)
   * @see org.xtext.example.perfectML.perfectML.PerfectMLPackage#getSVC_Random_state_def()
   * @model
   * @generated
   */
  boolean isRandom_state_def();

  /**
   * Sets the value of the '{@link org.xtext.example.perfectML.perfectML.SVC#isRandom_state_def <em>Random state def</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Random state def</em>' attribute.
   * @see #isRandom_state_def()
   * @generated
   */
  void setRandom_state_def(boolean value);

  /**
   * Returns the value of the '<em><b>Random state</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Random state</em>' attribute.
   * @see #setRandom_state(int)
   * @see org.xtext.example.perfectML.perfectML.PerfectMLPackage#getSVC_Random_state()
   * @model
   * @generated
   */
  int getRandom_state();

  /**
   * Sets the value of the '{@link org.xtext.example.perfectML.perfectML.SVC#getRandom_state <em>Random state</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Random state</em>' attribute.
   * @see #getRandom_state()
   * @generated
   */
  void setRandom_state(int value);

} // SVC
