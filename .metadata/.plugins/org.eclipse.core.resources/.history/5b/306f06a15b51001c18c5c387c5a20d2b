/*
 * generated by Xtext 2.25.0
 */
package org.xtext.example.perfectML.tests

import com.google.inject.Inject
import org.eclipse.xtext.testing.InjectWith
import org.eclipse.xtext.testing.extensions.InjectionExtension
import org.eclipse.xtext.testing.util.ParseHelper
import org.junit.jupiter.api.Assertions
import org.junit.jupiter.api.Test
import org.junit.jupiter.api.^extension.ExtendWith
import org.xtext.example.perfectML.generator.PerfectMLGenerator
import org.xtext.example.perfectML.perfectML.PerfectMLFile

@ExtendWith(InjectionExtension)
@InjectWith(PerfectMLInjectorProvider)
class PerfectMLParsingTest {
    @Inject
    ParseHelper<PerfectMLFile> parseHelper

    @Test
    def void loadModel() {
        val result = parseHelper.parse('''
            Use source data : "x"
            Use output file : "sortie"
            Use SVC with
            gamma = scale
            with 90 lines of training
            ;
        ''')
        Assertions.assertNotNull(result)
        val errors = result.eResource.errors
        Assertions.assertTrue(errors.isEmpty, '''Unexpected errors: «errors.join(", ")»''')
    }

}